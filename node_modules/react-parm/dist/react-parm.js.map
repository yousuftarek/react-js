{"version":3,"file":"react-parm.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["// external dependencies\nimport React from 'react';\nimport {findDOMNode} from 'react-dom';\n\n/**\n * @function bindSetState\n *\n * @description\n * bind the setState method to the component instance to ensure it can be used in a functional way\n *\n * @param {ReactComponent} instance the instance to bind setState to\n * @returns {void}\n */\nexport const bindSetState = (instance) => (instance.setState = instance.setState.bind(instance));\n\n/**\n * @function isClassComponent\n *\n * @description\n * is the value passed a valid react component class instance\n *\n * @param {any} value the value to test\n * @returns {boolean} is the value a react component instance\n */\nexport const isClassComponent = (value) => !!value && value instanceof React.Component;\n\n/**\n * @function logInvalidInstanceError\n *\n * @description\n * notify the user that the instance passed is invalid\n *\n * @param {string} type the type of creator being called\n * @returns {void}\n */\nexport const logInvalidInstanceError = (type) =>\n  console.error(`The instance provided for use with the ${type} is not a valid React component instance.`); // eslint-disable-line no-console\n\n/**\n * @function createRefCreator\n *\n * @description\n * create a method that will assign a ref value to the instance passed\n *\n * @param {function} getter the function that gets the component value for the ref\n * @returns {function(ReactComponent, string): function((HTMLElement|Component)): void} the ref create\n */\nexport const createRefCreator = (getter) => (instance, ref) =>\n  isClassComponent(instance) ? (component) => (instance[ref] = getter(component)) : logInvalidInstanceError('ref');\n\n/**\n * @function getNamespacedRef\n *\n * @description\n * get the ref that is a combination of the raw component and the component's underlying HTML element\n *\n * @param {ReactComponent} component the component to assin\n * @returns {{component: ReactComponent, element: HTMLElement}} the namespaced ref\n */\nexport const getNamespacedRef = (component) => ({component, element: findDOMNode(component)});\n\n/**\n * @function identity\n *\n * @description\n * return the first parameter passed\n *\n * @param {any} value the value to pass through\n * @returns {any} the first parameter passed\n */\nexport const identity = (value) => value;\n","// external dependencies\nimport React from 'react';\nimport {findDOMNode} from 'react-dom';\n\n// utils\nimport {\n  bindSetState,\n  createRefCreator,\n  getNamespacedRef,\n  identity,\n  isClassComponent,\n  logInvalidInstanceError\n} from './utils';\n\n/**\n * @function createCombinedRef\n *\n * @description\n * create a ref that assigns both the raw component and the underlying HTML element to the instance on a namespace\n *\n * @param {ReactComponent} instance the instance to assign to\n * @param {string} ref the instance value name\n * @returns {{component: ReactComponent, element: HTMLElement}} the combined ref\n */\nexport const createCombinedRef = createRefCreator(getNamespacedRef);\n\n/**\n * @function createComponentRef\n *\n * @description\n * create a ref that assigns the component itself to the instance\n *\n * @param {ReactComponent} instance the instance to assign to\n * @param {string} ref the instance value name\n * @returns {ReactComponent} the component ref\n */\nexport const createComponentRef = createRefCreator(identity);\n\n/**\n * @function createElementRef\n *\n * @description\n * create a ref that assigns the component's underlying HTML element to the instance\n *\n * @param {ReactComponent} instance the instance to assign to\n * @param {string} ref the instance value name\n * @returns {HTMLElement} the element ref\n */\nexport const createElementRef = createRefCreator(findDOMNode);\n\n/**\n * @function createMethod\n *\n * @description\n * create a method that is a pure version of the lifecycle / instance method passed to it\n *\n * the conditional function return is to ensure the method is called with as performant a way as possible\n *\n * @param {ReactComponent} instance the instance the method is assigned to\n * @param {function} method the instance method\n * @param {Array<any>} extraArgs additional args to pass to the method\n * @returns {function(...Array<any>): any} the method with the instance passed as value\n */\nexport const createMethod = (instance, method, ...extraArgs) =>\n  isClassComponent(instance)\n    ? bindSetState(instance) && ((...args) => method.call(instance, instance, args, extraArgs))\n    : logInvalidInstanceError('method'); // eslint-disable-line no-console\n\n/**\n * @function createComponent\n *\n * @description\n * create a component from the render method and any options passed\n *\n * @param {function} render the function to render the component\n * @param {Object} [options={}] the options to render the component with\n * @param {function} [getInitialState] the method to get the initial state with\n * @param {boolean} [isPure] is PureComponent used\n * @param {Object} [state] the initial state\n * @returns {ReactComponent} the component class\n */\nexport const createComponent = (render, {getInitialState, isPure, state, ...options} = {}) => {\n  const Constructor = isPure ? React.PureComponent : React.Component;\n\n  function ParmComponent(initialProps) {\n    Constructor.call(this, initialProps);\n\n    this.state = typeof getInitialState === 'function' ? createMethod(this, getInitialState)() : state || null;\n\n    Object.keys(options).forEach((key) => {\n      this[key] = typeof options[key] === 'function' ? createMethod(this, options[key]) : options[key];\n    });\n\n    this.render = createMethod(this, render);\n\n    return this;\n  }\n\n  ParmComponent.prototype = Object.create(Constructor.prototype);\n\n  ParmComponent.displayName = render.displayName || render.name || 'ParmComponent';\n  ParmComponent.propTypes = render.propTypes;\n  ParmComponent.contextTypes = render.contextTypes;\n  ParmComponent.childContextTypes = render.childContextTypes;\n  ParmComponent.defaultProps = render.defaultProps;\n\n  return ParmComponent;\n};\n"],"names":["bindSetState","instance","setState","bind","isClassComponent","value","React","Component","logInvalidInstanceError","type","console","error","createRefCreator","getter","ref","component","getNamespacedRef","element","findDOMNode","identity","createCombinedRef","createComponentRef","createElementRef","createMethod","method","extraArgs","args","call","createComponent","render","getInitialState","isPure","state","options","Constructor","PureComponent","ParmComponent","initialProps","Object","keys","forEach","key","prototype","create","displayName","name","propTypes","contextTypes","childContextTypes","defaultProps"],"mappings":"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"}