{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isInteger = _interopRequireDefault(require(\"lodash/isInteger\"));\n\nvar _repeat = _interopRequireDefault(require(\"lodash/repeat\"));\n\nvar _buffer = _interopRequireDefault(require(\"./buffer\"));\n\nvar n = _interopRequireWildcard(require(\"./node\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar generatorFunctions = _interopRequireWildcard(require(\"./generators\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst SCIENTIFIC_NOTATION = /e/i;\nconst ZERO_DECIMAL_INTEGER = /\\.0+$/;\nconst NON_DECIMAL_LITERAL = /^0[box]/;\n\nclass Printer {\n  constructor(format, map) {\n    this.inForStatementInitCounter = 0;\n    this._printStack = [];\n    this._indent = 0;\n    this._insideAux = false;\n    this._printedCommentStarts = {};\n    this._parenPushNewlineState = null;\n    this._noLineTerminator = false;\n    this._printAuxAfterOnNextUserNode = false;\n    this._printedComments = new WeakSet();\n    this._endsWithInteger = false;\n    this._endsWithWord = false;\n    this.format = format || {};\n    this._buf = new _buffer.default(map);\n  }\n\n  generate(ast) {\n    this.print(ast);\n\n    this._maybeAddAuxComment();\n\n    return this._buf.get();\n  }\n\n  indent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent++;\n  }\n\n  dedent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent--;\n  }\n\n  semicolon(force = false) {\n    this._maybeAddAuxComment();\n\n    this._append(\";\", !force);\n  }\n\n  rightBrace() {\n    if (this.format.minified) {\n      this._buf.removeLastSemicolon();\n    }\n\n    this.token(\"}\");\n  }\n\n  space(force = false) {\n    if (this.format.compact) return;\n\n    if (this._buf.hasContent() && !this.endsWith(\" \") && !this.endsWith(\"\\n\") || force) {\n      this._space();\n    }\n  }\n\n  word(str) {\n    if (this._endsWithWord || this.endsWith(\"/\") && str.indexOf(\"/\") === 0) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n\n    this._endsWithWord = true;\n  }\n\n  number(str) {\n    this.word(str);\n    this._endsWithInteger = (0, _isInteger.default)(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== \".\";\n  }\n\n  token(str) {\n    if (str === \"--\" && this.endsWith(\"!\") || str[0] === \"+\" && this.endsWith(\"+\") || str[0] === \"-\" && this.endsWith(\"-\") || str[0] === \".\" && this._endsWithInteger) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n  }\n\n  newline(i) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    if (this.endsWith(\"\\n\\n\")) return;\n    if (typeof i !== \"number\") i = 1;\n    i = Math.min(2, i);\n    if (this.endsWith(\"{\\n\") || this.endsWith(\":\\n\")) i--;\n    if (i <= 0) return;\n\n    for (let j = 0; j < i; j++) {\n      this._newline();\n    }\n  }\n\n  endsWith(str) {\n    return this._buf.endsWith(str);\n  }\n\n  removeTrailingNewline() {\n    this._buf.removeTrailingNewline();\n  }\n\n  exactSource(loc, cb) {\n    this._catchUp(\"start\", loc);\n\n    this._buf.exactSource(loc, cb);\n  }\n\n  source(prop, loc) {\n    this._catchUp(prop, loc);\n\n    this._buf.source(prop, loc);\n  }\n\n  withSource(prop, loc, cb) {\n    this._catchUp(prop, loc);\n\n    this._buf.withSource(prop, loc, cb);\n  }\n\n  _space() {\n    this._append(\" \", true);\n  }\n\n  _newline() {\n    this._append(\"\\n\", true);\n  }\n\n  _append(str, queue = false) {\n    this._maybeAddParen(str);\n\n    this._maybeIndent(str);\n\n    if (queue) this._buf.queue(str);else this._buf.append(str);\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _maybeIndent(str) {\n    if (this._indent && this.endsWith(\"\\n\") && str[0] !== \"\\n\") {\n      this._buf.queue(this._getIndent());\n    }\n  }\n\n  _maybeAddParen(str) {\n    const parenPushNewlineState = this._parenPushNewlineState;\n    if (!parenPushNewlineState) return;\n    this._parenPushNewlineState = null;\n    let i;\n\n    for (i = 0; i < str.length && str[i] === \" \"; i++) continue;\n\n    if (i === str.length) return;\n    const cha = str[i];\n\n    if (cha !== \"\\n\") {\n      if (cha !== \"/\") return;\n      if (i + 1 === str.length) return;\n      const chaPost = str[i + 1];\n      if (chaPost !== \"/\" && chaPost !== \"*\") return;\n    }\n\n    this.token(\"(\");\n    this.indent();\n    parenPushNewlineState.printed = true;\n  }\n\n  _catchUp(prop, loc) {\n    if (!this.format.retainLines) return;\n    const pos = loc ? loc[prop] : null;\n\n    if (pos && pos.line !== null) {\n      const count = pos.line - this._buf.getCurrentLine();\n\n      for (let i = 0; i < count; i++) {\n        this._newline();\n      }\n    }\n  }\n\n  _getIndent() {\n    return (0, _repeat.default)(this.format.indent.style, this._indent);\n  }\n\n  startTerminatorless(isLabel = false) {\n    if (isLabel) {\n      this._noLineTerminator = true;\n      return null;\n    } else {\n      return this._parenPushNewlineState = {\n        printed: false\n      };\n    }\n  }\n\n  endTerminatorless(state) {\n    this._noLineTerminator = false;\n\n    if (state && state.printed) {\n      this.dedent();\n      this.newline();\n      this.token(\")\");\n    }\n  }\n\n  print(node, parent) {\n    if (!node) return;\n    const oldConcise = this.format.concise;\n\n    if (node._compact) {\n      this.format.concise = true;\n    }\n\n    const printMethod = this[node.type];\n\n    if (!printMethod) {\n      throw new ReferenceError(`unknown node of type ${JSON.stringify(node.type)} with constructor ${JSON.stringify(node && node.constructor.name)}`);\n    }\n\n    this._printStack.push(node);\n\n    const oldInAux = this._insideAux;\n    this._insideAux = !node.loc;\n\n    this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n    let needsParens = n.needsParens(node, parent, this._printStack);\n\n    if (this.format.retainFunctionParens && node.type === \"FunctionExpression\" && node.extra && node.extra.parenthesized) {\n      needsParens = true;\n    }\n\n    if (needsParens) this.token(\"(\");\n\n    this._printLeadingComments(node);\n\n    const loc = t.isProgram(node) || t.isFile(node) ? null : node.loc;\n    this.withSource(\"start\", loc, () => {\n      printMethod.call(this, node, parent);\n    });\n\n    this._printTrailingComments(node);\n\n    if (needsParens) this.token(\")\");\n\n    this._printStack.pop();\n\n    this.format.concise = oldConcise;\n    this._insideAux = oldInAux;\n  }\n\n  _maybeAddAuxComment(enteredPositionlessNode) {\n    if (enteredPositionlessNode) this._printAuxBeforeComment();\n    if (!this._insideAux) this._printAuxAfterComment();\n  }\n\n  _printAuxBeforeComment() {\n    if (this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = true;\n    const comment = this.format.auxiliaryCommentBefore;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  _printAuxAfterComment() {\n    if (!this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = false;\n    const comment = this.format.auxiliaryCommentAfter;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  getPossibleRaw(node) {\n    const extra = node.extra;\n\n    if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n      return extra.raw;\n    }\n  }\n\n  printJoin(nodes, parent, opts = {}) {\n    if (!nodes || !nodes.length) return;\n    if (opts.indent) this.indent();\n    const newlineOpts = {\n      addNewlines: opts.addNewlines\n    };\n\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (!node) continue;\n      if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n      this.print(node, parent);\n\n      if (opts.iterator) {\n        opts.iterator(node, i);\n      }\n\n      if (opts.separator && i < nodes.length - 1) {\n        opts.separator.call(this);\n      }\n\n      if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  }\n\n  printAndIndentOnComments(node, parent) {\n    const indent = node.leadingComments && node.leadingComments.length > 0;\n    if (indent) this.indent();\n    this.print(node, parent);\n    if (indent) this.dedent();\n  }\n\n  printBlock(parent) {\n    const node = parent.body;\n\n    if (!t.isEmptyStatement(node)) {\n      this.space();\n    }\n\n    this.print(node, parent);\n  }\n\n  _printTrailingComments(node) {\n    this._printComments(this._getComments(false, node));\n  }\n\n  _printLeadingComments(node) {\n    this._printComments(this._getComments(true, node));\n  }\n\n  printInnerComments(node, indent = true) {\n    if (!node.innerComments || !node.innerComments.length) return;\n    if (indent) this.indent();\n\n    this._printComments(node.innerComments);\n\n    if (indent) this.dedent();\n  }\n\n  printSequence(nodes, parent, opts = {}) {\n    opts.statement = true;\n    return this.printJoin(nodes, parent, opts);\n  }\n\n  printList(items, parent, opts = {}) {\n    if (opts.separator == null) {\n      opts.separator = commaSeparator;\n    }\n\n    return this.printJoin(items, parent, opts);\n  }\n\n  _printNewline(leading, node, parent, opts) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    let lines = 0;\n\n    if (this._buf.hasContent()) {\n      if (!leading) lines++;\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n      const needs = leading ? n.needsWhitespaceBefore : n.needsWhitespaceAfter;\n      if (needs(node, parent)) lines++;\n    }\n\n    this.newline(lines);\n  }\n\n  _getComments(leading, node) {\n    return node && (leading ? node.leadingComments : node.trailingComments) || [];\n  }\n\n  _printComment(comment) {\n    if (!this.format.shouldPrintComment(comment.value)) return;\n    if (comment.ignore) return;\n    if (this._printedComments.has(comment)) return;\n\n    this._printedComments.add(comment);\n\n    if (comment.start != null) {\n      if (this._printedCommentStarts[comment.start]) return;\n      this._printedCommentStarts[comment.start] = true;\n    }\n\n    const isBlockComment = comment.type === \"CommentBlock\";\n    this.newline(this._buf.hasContent() && !this._noLineTerminator && isBlockComment ? 1 : 0);\n    if (!this.endsWith(\"[\") && !this.endsWith(\"{\")) this.space();\n    let val = !isBlockComment && !this._noLineTerminator ? `//${comment.value}\\n` : `/*${comment.value}*/`;\n\n    if (isBlockComment && this.format.indent.adjustMultilineComment) {\n      const offset = comment.loc && comment.loc.start.column;\n\n      if (offset) {\n        const newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n        val = val.replace(newlineRegex, \"\\n\");\n      }\n\n      const indentSize = Math.max(this._getIndent().length, this._buf.getCurrentColumn());\n      val = val.replace(/\\n(?!$)/g, `\\n${(0, _repeat.default)(\" \", indentSize)}`);\n    }\n\n    if (this.endsWith(\"/\")) this._space();\n    this.withSource(\"start\", comment.loc, () => {\n      this._append(val);\n    });\n    this.newline(isBlockComment && !this._noLineTerminator ? 1 : 0);\n  }\n\n  _printComments(comments) {\n    if (!comments || !comments.length) return;\n\n    for (const comment of comments) {\n      this._printComment(comment);\n    }\n  }\n\n}\n\nexports.default = Printer;\nObject.assign(Printer.prototype, generatorFunctions);\n\nfunction commaSeparator() {\n  this.token(\",\");\n  this.space();\n}","map":{"version":3,"sources":["/home/gronthik/Downloads/gronthik.com/gronthikfrontend/bookstore/node_modules/@babel/helpers/node_modules/@babel/generator/lib/printer.js"],"names":["Object","defineProperty","exports","value","default","_isInteger","_interopRequireDefault","require","_repeat","_buffer","n","_interopRequireWildcard","t","generatorFunctions","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","SCIENTIFIC_NOTATION","ZERO_DECIMAL_INTEGER","NON_DECIMAL_LITERAL","Printer","constructor","format","map","inForStatementInitCounter","_printStack","_indent","_insideAux","_printedCommentStarts","_parenPushNewlineState","_noLineTerminator","_printAuxAfterOnNextUserNode","_printedComments","WeakSet","_endsWithInteger","_endsWithWord","_buf","generate","ast","print","_maybeAddAuxComment","indent","compact","concise","dedent","semicolon","force","_append","rightBrace","minified","removeLastSemicolon","token","space","hasContent","endsWith","_space","word","str","indexOf","number","test","length","newline","i","retainLines","Math","min","j","_newline","removeTrailingNewline","exactSource","loc","cb","_catchUp","source","prop","withSource","queue","_maybeAddParen","_maybeIndent","append","_getIndent","parenPushNewlineState","cha","chaPost","printed","pos","line","count","getCurrentLine","style","startTerminatorless","isLabel","endTerminatorless","state","node","parent","oldConcise","_compact","printMethod","type","ReferenceError","JSON","stringify","name","push","oldInAux","needsParens","retainFunctionParens","extra","parenthesized","_printLeadingComments","isProgram","isFile","_printTrailingComments","pop","enteredPositionlessNode","_printAuxBeforeComment","_printAuxAfterComment","comment","auxiliaryCommentBefore","_printComment","auxiliaryCommentAfter","getPossibleRaw","raw","rawValue","printJoin","nodes","opts","newlineOpts","addNewlines","statement","_printNewline","iterator","separator","printAndIndentOnComments","leadingComments","printBlock","body","isEmptyStatement","_printComments","_getComments","printInnerComments","innerComments","printSequence","printList","items","commaSeparator","leading","lines","needs","needsWhitespaceBefore","needsWhitespaceAfter","trailingComments","shouldPrintComment","ignore","add","start","isBlockComment","val","adjustMultilineComment","offset","column","newlineRegex","RegExp","replace","indentSize","max","getCurrentColumn","comments","assign"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAvC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIG,CAAC,GAAGC,uBAAuB,CAACJ,OAAO,CAAC,QAAD,CAAR,CAA/B;;AAEA,IAAIK,CAAC,GAAGD,uBAAuB,CAACJ,OAAO,CAAC,cAAD,CAAR,CAA/B;;AAEA,IAAIM,kBAAkB,GAAGF,uBAAuB,CAACJ,OAAO,CAAC,cAAD,CAAR,CAAhD;;AAEA,SAASO,wBAAT,GAAoC;AAAE,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;AAAa,MAAIC,KAAK,GAAG,IAAID,OAAJ,EAAZ;;AAA2BD,EAAAA,wBAAwB,GAAG,YAAY;AAAE,WAAOE,KAAP;AAAe,GAAxD;;AAA0D,SAAOA,KAAP;AAAe;;AAE1L,SAASL,uBAAT,CAAiCM,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa;;AAAC,MAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA9D,EAA0E;AAAE,WAAO;AAAEb,MAAAA,OAAO,EAAEa;AAAX,KAAP;AAA0B;;AAAC,MAAID,KAAK,GAAGF,wBAAwB,EAApC;;AAAwC,MAAIE,KAAK,IAAIA,KAAK,CAACG,GAAN,CAAUF,GAAV,CAAb,EAA6B;AAAE,WAAOD,KAAK,CAACI,GAAN,CAAUH,GAAV,CAAP;AAAwB;;AAAC,MAAII,MAAM,GAAG,EAAb;AAAiB,MAAIC,qBAAqB,GAAGtB,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACuB,wBAA5D;;AAAsF,OAAK,IAAIC,GAAT,IAAgBP,GAAhB,EAAqB;AAAE,QAAIjB,MAAM,CAACyB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCV,GAArC,EAA0CO,GAA1C,CAAJ,EAAoD;AAAE,UAAII,IAAI,GAAGN,qBAAqB,GAAGtB,MAAM,CAACuB,wBAAP,CAAgCN,GAAhC,EAAqCO,GAArC,CAAH,GAA+C,IAA/E;;AAAqF,UAAII,IAAI,KAAKA,IAAI,CAACR,GAAL,IAAYQ,IAAI,CAACC,GAAtB,CAAR,EAAoC;AAAE7B,QAAAA,MAAM,CAACC,cAAP,CAAsBoB,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;AAA2C,OAAjF,MAAuF;AAAEP,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcP,GAAG,CAACO,GAAD,CAAjB;AAAyB;AAAE;AAAE;;AAACH,EAAAA,MAAM,CAACjB,OAAP,GAAiBa,GAAjB;;AAAsB,MAAID,KAAJ,EAAW;AAAEA,IAAAA,KAAK,CAACa,GAAN,CAAUZ,GAAV,EAAeI,MAAf;AAAyB;;AAAC,SAAOA,MAAP;AAAgB;;AAEvuB,SAASf,sBAAT,CAAgCW,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEb,IAAAA,OAAO,EAAEa;AAAX,GAArC;AAAwD;;AAE/F,MAAMa,mBAAmB,GAAG,IAA5B;AACA,MAAMC,oBAAoB,GAAG,OAA7B;AACA,MAAMC,mBAAmB,GAAG,SAA5B;;AAEA,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,CAACC,MAAD,EAASC,GAAT,EAAc;AACvB,SAAKC,yBAAL,GAAiC,CAAjC;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,qBAAL,GAA6B,EAA7B;AACA,SAAKC,sBAAL,GAA8B,IAA9B;AACA,SAAKC,iBAAL,GAAyB,KAAzB;AACA,SAAKC,4BAAL,GAAoC,KAApC;AACA,SAAKC,gBAAL,GAAwB,IAAIC,OAAJ,EAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKb,MAAL,GAAcA,MAAM,IAAI,EAAxB;AACA,SAAKc,IAAL,GAAY,IAAIxC,OAAO,CAACL,OAAZ,CAAoBgC,GAApB,CAAZ;AACD;;AAEDc,EAAAA,QAAQ,CAACC,GAAD,EAAM;AACZ,SAAKC,KAAL,CAAWD,GAAX;;AAEA,SAAKE,mBAAL;;AAEA,WAAO,KAAKJ,IAAL,CAAU7B,GAAV,EAAP;AACD;;AAEDkC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKnB,MAAL,CAAYoB,OAAZ,IAAuB,KAAKpB,MAAL,CAAYqB,OAAvC,EAAgD;AAChD,SAAKjB,OAAL;AACD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKtB,MAAL,CAAYoB,OAAZ,IAAuB,KAAKpB,MAAL,CAAYqB,OAAvC,EAAgD;AAChD,SAAKjB,OAAL;AACD;;AAEDmB,EAAAA,SAAS,CAACC,KAAK,GAAG,KAAT,EAAgB;AACvB,SAAKN,mBAAL;;AAEA,SAAKO,OAAL,CAAa,GAAb,EAAkB,CAACD,KAAnB;AACD;;AAEDE,EAAAA,UAAU,GAAG;AACX,QAAI,KAAK1B,MAAL,CAAY2B,QAAhB,EAA0B;AACxB,WAAKb,IAAL,CAAUc,mBAAV;AACD;;AAED,SAAKC,KAAL,CAAW,GAAX;AACD;;AAEDC,EAAAA,KAAK,CAACN,KAAK,GAAG,KAAT,EAAgB;AACnB,QAAI,KAAKxB,MAAL,CAAYoB,OAAhB,EAAyB;;AAEzB,QAAI,KAAKN,IAAL,CAAUiB,UAAV,MAA0B,CAAC,KAAKC,QAAL,CAAc,GAAd,CAA3B,IAAiD,CAAC,KAAKA,QAAL,CAAc,IAAd,CAAlD,IAAyER,KAA7E,EAAoF;AAClF,WAAKS,MAAL;AACD;AACF;;AAEDC,EAAAA,IAAI,CAACC,GAAD,EAAM;AACR,QAAI,KAAKtB,aAAL,IAAsB,KAAKmB,QAAL,CAAc,GAAd,KAAsBG,GAAG,CAACC,OAAJ,CAAY,GAAZ,MAAqB,CAArE,EAAwE;AACtE,WAAKH,MAAL;AACD;;AAED,SAAKf,mBAAL;;AAEA,SAAKO,OAAL,CAAaU,GAAb;;AAEA,SAAKtB,aAAL,GAAqB,IAArB;AACD;;AAEDwB,EAAAA,MAAM,CAACF,GAAD,EAAM;AACV,SAAKD,IAAL,CAAUC,GAAV;AACA,SAAKvB,gBAAL,GAAwB,CAAC,GAAG1C,UAAU,CAACD,OAAf,EAAwB,CAACkE,GAAzB,KAAiC,CAACtC,mBAAmB,CAACyC,IAApB,CAAyBH,GAAzB,CAAlC,IAAmE,CAACxC,mBAAmB,CAAC2C,IAApB,CAAyBH,GAAzB,CAApE,IAAqG,CAACvC,oBAAoB,CAAC0C,IAArB,CAA0BH,GAA1B,CAAtG,IAAwIA,GAAG,CAACA,GAAG,CAACI,MAAJ,GAAa,CAAd,CAAH,KAAwB,GAAxL;AACD;;AAEDV,EAAAA,KAAK,CAACM,GAAD,EAAM;AACT,QAAIA,GAAG,KAAK,IAAR,IAAgB,KAAKH,QAAL,CAAc,GAAd,CAAhB,IAAsCG,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,IAAkB,KAAKH,QAAL,CAAc,GAAd,CAAxD,IAA8EG,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,IAAkB,KAAKH,QAAL,CAAc,GAAd,CAAhG,IAAsHG,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,IAAkB,KAAKvB,gBAAjJ,EAAmK;AACjK,WAAKqB,MAAL;AACD;;AAED,SAAKf,mBAAL;;AAEA,SAAKO,OAAL,CAAaU,GAAb;AACD;;AAEDK,EAAAA,OAAO,CAACC,CAAD,EAAI;AACT,QAAI,KAAKzC,MAAL,CAAY0C,WAAZ,IAA2B,KAAK1C,MAAL,CAAYoB,OAA3C,EAAoD;;AAEpD,QAAI,KAAKpB,MAAL,CAAYqB,OAAhB,EAAyB;AACvB,WAAKS,KAAL;AACA;AACD;;AAED,QAAI,KAAKE,QAAL,CAAc,MAAd,CAAJ,EAA2B;AAC3B,QAAI,OAAOS,CAAP,KAAa,QAAjB,EAA2BA,CAAC,GAAG,CAAJ;AAC3BA,IAAAA,CAAC,GAAGE,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,CAAZ,CAAJ;AACA,QAAI,KAAKT,QAAL,CAAc,KAAd,KAAwB,KAAKA,QAAL,CAAc,KAAd,CAA5B,EAAkDS,CAAC;AACnD,QAAIA,CAAC,IAAI,CAAT,EAAY;;AAEZ,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAApB,EAAuBI,CAAC,EAAxB,EAA4B;AAC1B,WAAKC,QAAL;AACD;AACF;;AAEDd,EAAAA,QAAQ,CAACG,GAAD,EAAM;AACZ,WAAO,KAAKrB,IAAL,CAAUkB,QAAV,CAAmBG,GAAnB,CAAP;AACD;;AAEDY,EAAAA,qBAAqB,GAAG;AACtB,SAAKjC,IAAL,CAAUiC,qBAAV;AACD;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,EAAN,EAAU;AACnB,SAAKC,QAAL,CAAc,OAAd,EAAuBF,GAAvB;;AAEA,SAAKnC,IAAL,CAAUkC,WAAV,CAAsBC,GAAtB,EAA2BC,EAA3B;AACD;;AAEDE,EAAAA,MAAM,CAACC,IAAD,EAAOJ,GAAP,EAAY;AAChB,SAAKE,QAAL,CAAcE,IAAd,EAAoBJ,GAApB;;AAEA,SAAKnC,IAAL,CAAUsC,MAAV,CAAiBC,IAAjB,EAAuBJ,GAAvB;AACD;;AAEDK,EAAAA,UAAU,CAACD,IAAD,EAAOJ,GAAP,EAAYC,EAAZ,EAAgB;AACxB,SAAKC,QAAL,CAAcE,IAAd,EAAoBJ,GAApB;;AAEA,SAAKnC,IAAL,CAAUwC,UAAV,CAAqBD,IAArB,EAA2BJ,GAA3B,EAAgCC,EAAhC;AACD;;AAEDjB,EAAAA,MAAM,GAAG;AACP,SAAKR,OAAL,CAAa,GAAb,EAAkB,IAAlB;AACD;;AAEDqB,EAAAA,QAAQ,GAAG;AACT,SAAKrB,OAAL,CAAa,IAAb,EAAmB,IAAnB;AACD;;AAEDA,EAAAA,OAAO,CAACU,GAAD,EAAMoB,KAAK,GAAG,KAAd,EAAqB;AAC1B,SAAKC,cAAL,CAAoBrB,GAApB;;AAEA,SAAKsB,YAAL,CAAkBtB,GAAlB;;AAEA,QAAIoB,KAAJ,EAAW,KAAKzC,IAAL,CAAUyC,KAAV,CAAgBpB,GAAhB,EAAX,KAAqC,KAAKrB,IAAL,CAAU4C,MAAV,CAAiBvB,GAAjB;AACrC,SAAKtB,aAAL,GAAqB,KAArB;AACA,SAAKD,gBAAL,GAAwB,KAAxB;AACD;;AAED6C,EAAAA,YAAY,CAACtB,GAAD,EAAM;AAChB,QAAI,KAAK/B,OAAL,IAAgB,KAAK4B,QAAL,CAAc,IAAd,CAAhB,IAAuCG,GAAG,CAAC,CAAD,CAAH,KAAW,IAAtD,EAA4D;AAC1D,WAAKrB,IAAL,CAAUyC,KAAV,CAAgB,KAAKI,UAAL,EAAhB;AACD;AACF;;AAEDH,EAAAA,cAAc,CAACrB,GAAD,EAAM;AAClB,UAAMyB,qBAAqB,GAAG,KAAKrD,sBAAnC;AACA,QAAI,CAACqD,qBAAL,EAA4B;AAC5B,SAAKrD,sBAAL,GAA8B,IAA9B;AACA,QAAIkC,CAAJ;;AAEA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGN,GAAG,CAACI,MAAR,IAAkBJ,GAAG,CAACM,CAAD,CAAH,KAAW,GAAzC,EAA8CA,CAAC,EAA/C,EAAmD;;AAEnD,QAAIA,CAAC,KAAKN,GAAG,CAACI,MAAd,EAAsB;AACtB,UAAMsB,GAAG,GAAG1B,GAAG,CAACM,CAAD,CAAf;;AAEA,QAAIoB,GAAG,KAAK,IAAZ,EAAkB;AAChB,UAAIA,GAAG,KAAK,GAAZ,EAAiB;AACjB,UAAIpB,CAAC,GAAG,CAAJ,KAAUN,GAAG,CAACI,MAAlB,EAA0B;AAC1B,YAAMuB,OAAO,GAAG3B,GAAG,CAACM,CAAC,GAAG,CAAL,CAAnB;AACA,UAAIqB,OAAO,KAAK,GAAZ,IAAmBA,OAAO,KAAK,GAAnC,EAAwC;AACzC;;AAED,SAAKjC,KAAL,CAAW,GAAX;AACA,SAAKV,MAAL;AACAyC,IAAAA,qBAAqB,CAACG,OAAtB,GAAgC,IAAhC;AACD;;AAEDZ,EAAAA,QAAQ,CAACE,IAAD,EAAOJ,GAAP,EAAY;AAClB,QAAI,CAAC,KAAKjD,MAAL,CAAY0C,WAAjB,EAA8B;AAC9B,UAAMsB,GAAG,GAAGf,GAAG,GAAGA,GAAG,CAACI,IAAD,CAAN,GAAe,IAA9B;;AAEA,QAAIW,GAAG,IAAIA,GAAG,CAACC,IAAJ,KAAa,IAAxB,EAA8B;AAC5B,YAAMC,KAAK,GAAGF,GAAG,CAACC,IAAJ,GAAW,KAAKnD,IAAL,CAAUqD,cAAV,EAAzB;;AAEA,WAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,KAApB,EAA2BzB,CAAC,EAA5B,EAAgC;AAC9B,aAAKK,QAAL;AACD;AACF;AACF;;AAEDa,EAAAA,UAAU,GAAG;AACX,WAAO,CAAC,GAAGtF,OAAO,CAACJ,OAAZ,EAAqB,KAAK+B,MAAL,CAAYmB,MAAZ,CAAmBiD,KAAxC,EAA+C,KAAKhE,OAApD,CAAP;AACD;;AAEDiE,EAAAA,mBAAmB,CAACC,OAAO,GAAG,KAAX,EAAkB;AACnC,QAAIA,OAAJ,EAAa;AACX,WAAK9D,iBAAL,GAAyB,IAAzB;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAKD,sBAAL,GAA8B;AACnCwD,QAAAA,OAAO,EAAE;AAD0B,OAArC;AAGD;AACF;;AAEDQ,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACvB,SAAKhE,iBAAL,GAAyB,KAAzB;;AAEA,QAAIgE,KAAK,IAAIA,KAAK,CAACT,OAAnB,EAA4B;AAC1B,WAAKzC,MAAL;AACA,WAAKkB,OAAL;AACA,WAAKX,KAAL,CAAW,GAAX;AACD;AACF;;AAEDZ,EAAAA,KAAK,CAACwD,IAAD,EAAOC,MAAP,EAAe;AAClB,QAAI,CAACD,IAAL,EAAW;AACX,UAAME,UAAU,GAAG,KAAK3E,MAAL,CAAYqB,OAA/B;;AAEA,QAAIoD,IAAI,CAACG,QAAT,EAAmB;AACjB,WAAK5E,MAAL,CAAYqB,OAAZ,GAAsB,IAAtB;AACD;;AAED,UAAMwD,WAAW,GAAG,KAAKJ,IAAI,CAACK,IAAV,CAApB;;AAEA,QAAI,CAACD,WAAL,EAAkB;AAChB,YAAM,IAAIE,cAAJ,CAAoB,wBAAuBC,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACK,IAApB,CAA0B,qBAAoBE,IAAI,CAACC,SAAL,CAAeR,IAAI,IAAIA,IAAI,CAAC1E,WAAL,CAAiBmF,IAAxC,CAA8C,EAAvI,CAAN;AACD;;AAED,SAAK/E,WAAL,CAAiBgF,IAAjB,CAAsBV,IAAtB;;AAEA,UAAMW,QAAQ,GAAG,KAAK/E,UAAtB;AACA,SAAKA,UAAL,GAAkB,CAACoE,IAAI,CAACxB,GAAxB;;AAEA,SAAK/B,mBAAL,CAAyB,KAAKb,UAAL,IAAmB,CAAC+E,QAA7C;;AAEA,QAAIC,WAAW,GAAG9G,CAAC,CAAC8G,WAAF,CAAcZ,IAAd,EAAoBC,MAApB,EAA4B,KAAKvE,WAAjC,CAAlB;;AAEA,QAAI,KAAKH,MAAL,CAAYsF,oBAAZ,IAAoCb,IAAI,CAACK,IAAL,KAAc,oBAAlD,IAA0EL,IAAI,CAACc,KAA/E,IAAwFd,IAAI,CAACc,KAAL,CAAWC,aAAvG,EAAsH;AACpHH,MAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAIA,WAAJ,EAAiB,KAAKxD,KAAL,CAAW,GAAX;;AAEjB,SAAK4D,qBAAL,CAA2BhB,IAA3B;;AAEA,UAAMxB,GAAG,GAAGxE,CAAC,CAACiH,SAAF,CAAYjB,IAAZ,KAAqBhG,CAAC,CAACkH,MAAF,CAASlB,IAAT,CAArB,GAAsC,IAAtC,GAA6CA,IAAI,CAACxB,GAA9D;AACA,SAAKK,UAAL,CAAgB,OAAhB,EAAyBL,GAAzB,EAA8B,MAAM;AAClC4B,MAAAA,WAAW,CAACrF,IAAZ,CAAiB,IAAjB,EAAuBiF,IAAvB,EAA6BC,MAA7B;AACD,KAFD;;AAIA,SAAKkB,sBAAL,CAA4BnB,IAA5B;;AAEA,QAAIY,WAAJ,EAAiB,KAAKxD,KAAL,CAAW,GAAX;;AAEjB,SAAK1B,WAAL,CAAiB0F,GAAjB;;AAEA,SAAK7F,MAAL,CAAYqB,OAAZ,GAAsBsD,UAAtB;AACA,SAAKtE,UAAL,GAAkB+E,QAAlB;AACD;;AAEDlE,EAAAA,mBAAmB,CAAC4E,uBAAD,EAA0B;AAC3C,QAAIA,uBAAJ,EAA6B,KAAKC,sBAAL;AAC7B,QAAI,CAAC,KAAK1F,UAAV,EAAsB,KAAK2F,qBAAL;AACvB;;AAEDD,EAAAA,sBAAsB,GAAG;AACvB,QAAI,KAAKtF,4BAAT,EAAuC;AACvC,SAAKA,4BAAL,GAAoC,IAApC;AACA,UAAMwF,OAAO,GAAG,KAAKjG,MAAL,CAAYkG,sBAA5B;;AAEA,QAAID,OAAJ,EAAa;AACX,WAAKE,aAAL,CAAmB;AACjBrB,QAAAA,IAAI,EAAE,cADW;AAEjB9G,QAAAA,KAAK,EAAEiI;AAFU,OAAnB;AAID;AACF;;AAEDD,EAAAA,qBAAqB,GAAG;AACtB,QAAI,CAAC,KAAKvF,4BAAV,EAAwC;AACxC,SAAKA,4BAAL,GAAoC,KAApC;AACA,UAAMwF,OAAO,GAAG,KAAKjG,MAAL,CAAYoG,qBAA5B;;AAEA,QAAIH,OAAJ,EAAa;AACX,WAAKE,aAAL,CAAmB;AACjBrB,QAAAA,IAAI,EAAE,cADW;AAEjB9G,QAAAA,KAAK,EAAEiI;AAFU,OAAnB;AAID;AACF;;AAEDI,EAAAA,cAAc,CAAC5B,IAAD,EAAO;AACnB,UAAMc,KAAK,GAAGd,IAAI,CAACc,KAAnB;;AAEA,QAAIA,KAAK,IAAIA,KAAK,CAACe,GAAN,IAAa,IAAtB,IAA8Bf,KAAK,CAACgB,QAAN,IAAkB,IAAhD,IAAwD9B,IAAI,CAACzG,KAAL,KAAeuH,KAAK,CAACgB,QAAjF,EAA2F;AACzF,aAAOhB,KAAK,CAACe,GAAb;AACD;AACF;;AAEDE,EAAAA,SAAS,CAACC,KAAD,EAAQ/B,MAAR,EAAgBgC,IAAI,GAAG,EAAvB,EAA2B;AAClC,QAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAAClE,MAArB,EAA6B;AAC7B,QAAImE,IAAI,CAACvF,MAAT,EAAiB,KAAKA,MAAL;AACjB,UAAMwF,WAAW,GAAG;AAClBC,MAAAA,WAAW,EAAEF,IAAI,CAACE;AADA,KAApB;;AAIA,SAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgE,KAAK,CAAClE,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACrC,YAAMgC,IAAI,GAAGgC,KAAK,CAAChE,CAAD,CAAlB;AACA,UAAI,CAACgC,IAAL,EAAW;AACX,UAAIiC,IAAI,CAACG,SAAT,EAAoB,KAAKC,aAAL,CAAmB,IAAnB,EAAyBrC,IAAzB,EAA+BC,MAA/B,EAAuCiC,WAAvC;AACpB,WAAK1F,KAAL,CAAWwD,IAAX,EAAiBC,MAAjB;;AAEA,UAAIgC,IAAI,CAACK,QAAT,EAAmB;AACjBL,QAAAA,IAAI,CAACK,QAAL,CAActC,IAAd,EAAoBhC,CAApB;AACD;;AAED,UAAIiE,IAAI,CAACM,SAAL,IAAkBvE,CAAC,GAAGgE,KAAK,CAAClE,MAAN,GAAe,CAAzC,EAA4C;AAC1CmE,QAAAA,IAAI,CAACM,SAAL,CAAexH,IAAf,CAAoB,IAApB;AACD;;AAED,UAAIkH,IAAI,CAACG,SAAT,EAAoB,KAAKC,aAAL,CAAmB,KAAnB,EAA0BrC,IAA1B,EAAgCC,MAAhC,EAAwCiC,WAAxC;AACrB;;AAED,QAAID,IAAI,CAACvF,MAAT,EAAiB,KAAKG,MAAL;AAClB;;AAED2F,EAAAA,wBAAwB,CAACxC,IAAD,EAAOC,MAAP,EAAe;AACrC,UAAMvD,MAAM,GAAGsD,IAAI,CAACyC,eAAL,IAAwBzC,IAAI,CAACyC,eAAL,CAAqB3E,MAArB,GAA8B,CAArE;AACA,QAAIpB,MAAJ,EAAY,KAAKA,MAAL;AACZ,SAAKF,KAAL,CAAWwD,IAAX,EAAiBC,MAAjB;AACA,QAAIvD,MAAJ,EAAY,KAAKG,MAAL;AACb;;AAED6F,EAAAA,UAAU,CAACzC,MAAD,EAAS;AACjB,UAAMD,IAAI,GAAGC,MAAM,CAAC0C,IAApB;;AAEA,QAAI,CAAC3I,CAAC,CAAC4I,gBAAF,CAAmB5C,IAAnB,CAAL,EAA+B;AAC7B,WAAK3C,KAAL;AACD;;AAED,SAAKb,KAAL,CAAWwD,IAAX,EAAiBC,MAAjB;AACD;;AAEDkB,EAAAA,sBAAsB,CAACnB,IAAD,EAAO;AAC3B,SAAK6C,cAAL,CAAoB,KAAKC,YAAL,CAAkB,KAAlB,EAAyB9C,IAAzB,CAApB;AACD;;AAEDgB,EAAAA,qBAAqB,CAAChB,IAAD,EAAO;AAC1B,SAAK6C,cAAL,CAAoB,KAAKC,YAAL,CAAkB,IAAlB,EAAwB9C,IAAxB,CAApB;AACD;;AAED+C,EAAAA,kBAAkB,CAAC/C,IAAD,EAAOtD,MAAM,GAAG,IAAhB,EAAsB;AACtC,QAAI,CAACsD,IAAI,CAACgD,aAAN,IAAuB,CAAChD,IAAI,CAACgD,aAAL,CAAmBlF,MAA/C,EAAuD;AACvD,QAAIpB,MAAJ,EAAY,KAAKA,MAAL;;AAEZ,SAAKmG,cAAL,CAAoB7C,IAAI,CAACgD,aAAzB;;AAEA,QAAItG,MAAJ,EAAY,KAAKG,MAAL;AACb;;AAEDoG,EAAAA,aAAa,CAACjB,KAAD,EAAQ/B,MAAR,EAAgBgC,IAAI,GAAG,EAAvB,EAA2B;AACtCA,IAAAA,IAAI,CAACG,SAAL,GAAiB,IAAjB;AACA,WAAO,KAAKL,SAAL,CAAeC,KAAf,EAAsB/B,MAAtB,EAA8BgC,IAA9B,CAAP;AACD;;AAEDiB,EAAAA,SAAS,CAACC,KAAD,EAAQlD,MAAR,EAAgBgC,IAAI,GAAG,EAAvB,EAA2B;AAClC,QAAIA,IAAI,CAACM,SAAL,IAAkB,IAAtB,EAA4B;AAC1BN,MAAAA,IAAI,CAACM,SAAL,GAAiBa,cAAjB;AACD;;AAED,WAAO,KAAKrB,SAAL,CAAeoB,KAAf,EAAsBlD,MAAtB,EAA8BgC,IAA9B,CAAP;AACD;;AAEDI,EAAAA,aAAa,CAACgB,OAAD,EAAUrD,IAAV,EAAgBC,MAAhB,EAAwBgC,IAAxB,EAA8B;AACzC,QAAI,KAAK1G,MAAL,CAAY0C,WAAZ,IAA2B,KAAK1C,MAAL,CAAYoB,OAA3C,EAAoD;;AAEpD,QAAI,KAAKpB,MAAL,CAAYqB,OAAhB,EAAyB;AACvB,WAAKS,KAAL;AACA;AACD;;AAED,QAAIiG,KAAK,GAAG,CAAZ;;AAEA,QAAI,KAAKjH,IAAL,CAAUiB,UAAV,EAAJ,EAA4B;AAC1B,UAAI,CAAC+F,OAAL,EAAcC,KAAK;AACnB,UAAIrB,IAAI,CAACE,WAAT,EAAsBmB,KAAK,IAAIrB,IAAI,CAACE,WAAL,CAAiBkB,OAAjB,EAA0BrD,IAA1B,KAAmC,CAA5C;AACtB,YAAMuD,KAAK,GAAGF,OAAO,GAAGvJ,CAAC,CAAC0J,qBAAL,GAA6B1J,CAAC,CAAC2J,oBAApD;AACA,UAAIF,KAAK,CAACvD,IAAD,EAAOC,MAAP,CAAT,EAAyBqD,KAAK;AAC/B;;AAED,SAAKvF,OAAL,CAAauF,KAAb;AACD;;AAEDR,EAAAA,YAAY,CAACO,OAAD,EAAUrD,IAAV,EAAgB;AAC1B,WAAOA,IAAI,KAAKqD,OAAO,GAAGrD,IAAI,CAACyC,eAAR,GAA0BzC,IAAI,CAAC0D,gBAA3C,CAAJ,IAAoE,EAA3E;AACD;;AAEDhC,EAAAA,aAAa,CAACF,OAAD,EAAU;AACrB,QAAI,CAAC,KAAKjG,MAAL,CAAYoI,kBAAZ,CAA+BnC,OAAO,CAACjI,KAAvC,CAAL,EAAoD;AACpD,QAAIiI,OAAO,CAACoC,MAAZ,EAAoB;AACpB,QAAI,KAAK3H,gBAAL,CAAsB1B,GAAtB,CAA0BiH,OAA1B,CAAJ,EAAwC;;AAExC,SAAKvF,gBAAL,CAAsB4H,GAAtB,CAA0BrC,OAA1B;;AAEA,QAAIA,OAAO,CAACsC,KAAR,IAAiB,IAArB,EAA2B;AACzB,UAAI,KAAKjI,qBAAL,CAA2B2F,OAAO,CAACsC,KAAnC,CAAJ,EAA+C;AAC/C,WAAKjI,qBAAL,CAA2B2F,OAAO,CAACsC,KAAnC,IAA4C,IAA5C;AACD;;AAED,UAAMC,cAAc,GAAGvC,OAAO,CAACnB,IAAR,KAAiB,cAAxC;AACA,SAAKtC,OAAL,CAAa,KAAK1B,IAAL,CAAUiB,UAAV,MAA0B,CAAC,KAAKvB,iBAAhC,IAAqDgI,cAArD,GAAsE,CAAtE,GAA0E,CAAvF;AACA,QAAI,CAAC,KAAKxG,QAAL,CAAc,GAAd,CAAD,IAAuB,CAAC,KAAKA,QAAL,CAAc,GAAd,CAA5B,EAAgD,KAAKF,KAAL;AAChD,QAAI2G,GAAG,GAAG,CAACD,cAAD,IAAmB,CAAC,KAAKhI,iBAAzB,GAA8C,KAAIyF,OAAO,CAACjI,KAAM,IAAhE,GAAuE,KAAIiI,OAAO,CAACjI,KAAM,IAAnG;;AAEA,QAAIwK,cAAc,IAAI,KAAKxI,MAAL,CAAYmB,MAAZ,CAAmBuH,sBAAzC,EAAiE;AAC/D,YAAMC,MAAM,GAAG1C,OAAO,CAAChD,GAAR,IAAegD,OAAO,CAAChD,GAAR,CAAYsF,KAAZ,CAAkBK,MAAhD;;AAEA,UAAID,MAAJ,EAAY;AACV,cAAME,YAAY,GAAG,IAAIC,MAAJ,CAAW,cAAcH,MAAd,GAAuB,GAAlC,EAAuC,GAAvC,CAArB;AACAF,QAAAA,GAAG,GAAGA,GAAG,CAACM,OAAJ,CAAYF,YAAZ,EAA0B,IAA1B,CAAN;AACD;;AAED,YAAMG,UAAU,GAAGrG,IAAI,CAACsG,GAAL,CAAS,KAAKtF,UAAL,GAAkBpB,MAA3B,EAAmC,KAAKzB,IAAL,CAAUoI,gBAAV,EAAnC,CAAnB;AACAT,MAAAA,GAAG,GAAGA,GAAG,CAACM,OAAJ,CAAY,UAAZ,EAAyB,KAAI,CAAC,GAAG1K,OAAO,CAACJ,OAAZ,EAAqB,GAArB,EAA0B+K,UAA1B,CAAsC,EAAnE,CAAN;AACD;;AAED,QAAI,KAAKhH,QAAL,CAAc,GAAd,CAAJ,EAAwB,KAAKC,MAAL;AACxB,SAAKqB,UAAL,CAAgB,OAAhB,EAAyB2C,OAAO,CAAChD,GAAjC,EAAsC,MAAM;AAC1C,WAAKxB,OAAL,CAAagH,GAAb;AACD,KAFD;AAGA,SAAKjG,OAAL,CAAagG,cAAc,IAAI,CAAC,KAAKhI,iBAAxB,GAA4C,CAA5C,GAAgD,CAA7D;AACD;;AAED8G,EAAAA,cAAc,CAAC6B,QAAD,EAAW;AACvB,QAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAAC5G,MAA3B,EAAmC;;AAEnC,SAAK,MAAM0D,OAAX,IAAsBkD,QAAtB,EAAgC;AAC9B,WAAKhD,aAAL,CAAmBF,OAAnB;AACD;AACF;;AAvbW;;AA2bdlI,OAAO,CAACE,OAAR,GAAkB6B,OAAlB;AACAjC,MAAM,CAACuL,MAAP,CAActJ,OAAO,CAACR,SAAtB,EAAiCZ,kBAAjC;;AAEA,SAASmJ,cAAT,GAA0B;AACxB,OAAKhG,KAAL,CAAW,GAAX;AACA,OAAKC,KAAL;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isInteger = _interopRequireDefault(require(\"lodash/isInteger\"));\n\nvar _repeat = _interopRequireDefault(require(\"lodash/repeat\"));\n\nvar _buffer = _interopRequireDefault(require(\"./buffer\"));\n\nvar n = _interopRequireWildcard(require(\"./node\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar generatorFunctions = _interopRequireWildcard(require(\"./generators\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SCIENTIFIC_NOTATION = /e/i;\nconst ZERO_DECIMAL_INTEGER = /\\.0+$/;\nconst NON_DECIMAL_LITERAL = /^0[box]/;\n\nclass Printer {\n  constructor(format, map) {\n    this.inForStatementInitCounter = 0;\n    this._printStack = [];\n    this._indent = 0;\n    this._insideAux = false;\n    this._printedCommentStarts = {};\n    this._parenPushNewlineState = null;\n    this._noLineTerminator = false;\n    this._printAuxAfterOnNextUserNode = false;\n    this._printedComments = new WeakSet();\n    this._endsWithInteger = false;\n    this._endsWithWord = false;\n    this.format = format || {};\n    this._buf = new _buffer.default(map);\n  }\n\n  generate(ast) {\n    this.print(ast);\n\n    this._maybeAddAuxComment();\n\n    return this._buf.get();\n  }\n\n  indent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent++;\n  }\n\n  dedent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent--;\n  }\n\n  semicolon(force = false) {\n    this._maybeAddAuxComment();\n\n    this._append(\";\", !force);\n  }\n\n  rightBrace() {\n    if (this.format.minified) {\n      this._buf.removeLastSemicolon();\n    }\n\n    this.token(\"}\");\n  }\n\n  space(force = false) {\n    if (this.format.compact) return;\n\n    if (this._buf.hasContent() && !this.endsWith(\" \") && !this.endsWith(\"\\n\") || force) {\n      this._space();\n    }\n  }\n\n  word(str) {\n    if (this._endsWithWord || this.endsWith(\"/\") && str.indexOf(\"/\") === 0) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n\n    this._endsWithWord = true;\n  }\n\n  number(str) {\n    this.word(str);\n    this._endsWithInteger = (0, _isInteger.default)(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== \".\";\n  }\n\n  token(str) {\n    if (str === \"--\" && this.endsWith(\"!\") || str[0] === \"+\" && this.endsWith(\"+\") || str[0] === \"-\" && this.endsWith(\"-\") || str[0] === \".\" && this._endsWithInteger) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n  }\n\n  newline(i) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    if (this.endsWith(\"\\n\\n\")) return;\n    if (typeof i !== \"number\") i = 1;\n    i = Math.min(2, i);\n    if (this.endsWith(\"{\\n\") || this.endsWith(\":\\n\")) i--;\n    if (i <= 0) return;\n\n    for (let j = 0; j < i; j++) {\n      this._newline();\n    }\n  }\n\n  endsWith(str) {\n    return this._buf.endsWith(str);\n  }\n\n  removeTrailingNewline() {\n    this._buf.removeTrailingNewline();\n  }\n\n  exactSource(loc, cb) {\n    this._catchUp(\"start\", loc);\n\n    this._buf.exactSource(loc, cb);\n  }\n\n  source(prop, loc) {\n    this._catchUp(prop, loc);\n\n    this._buf.source(prop, loc);\n  }\n\n  withSource(prop, loc, cb) {\n    this._catchUp(prop, loc);\n\n    this._buf.withSource(prop, loc, cb);\n  }\n\n  _space() {\n    this._append(\" \", true);\n  }\n\n  _newline() {\n    this._append(\"\\n\", true);\n  }\n\n  _append(str, queue = false) {\n    this._maybeAddParen(str);\n\n    this._maybeIndent(str);\n\n    if (queue) this._buf.queue(str);else this._buf.append(str);\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _maybeIndent(str) {\n    if (this._indent && this.endsWith(\"\\n\") && str[0] !== \"\\n\") {\n      this._buf.queue(this._getIndent());\n    }\n  }\n\n  _maybeAddParen(str) {\n    const parenPushNewlineState = this._parenPushNewlineState;\n    if (!parenPushNewlineState) return;\n    this._parenPushNewlineState = null;\n    let i;\n\n    for (i = 0; i < str.length && str[i] === \" \"; i++) continue;\n\n    if (i === str.length) return;\n    const cha = str[i];\n\n    if (cha !== \"\\n\") {\n      if (cha !== \"/\") return;\n      if (i + 1 === str.length) return;\n      const chaPost = str[i + 1];\n      if (chaPost !== \"/\" && chaPost !== \"*\") return;\n    }\n\n    this.token(\"(\");\n    this.indent();\n    parenPushNewlineState.printed = true;\n  }\n\n  _catchUp(prop, loc) {\n    if (!this.format.retainLines) return;\n    const pos = loc ? loc[prop] : null;\n\n    if (pos && pos.line !== null) {\n      const count = pos.line - this._buf.getCurrentLine();\n\n      for (let i = 0; i < count; i++) {\n        this._newline();\n      }\n    }\n  }\n\n  _getIndent() {\n    return (0, _repeat.default)(this.format.indent.style, this._indent);\n  }\n\n  startTerminatorless(isLabel = false) {\n    if (isLabel) {\n      this._noLineTerminator = true;\n      return null;\n    } else {\n      return this._parenPushNewlineState = {\n        printed: false\n      };\n    }\n  }\n\n  endTerminatorless(state) {\n    this._noLineTerminator = false;\n\n    if (state && state.printed) {\n      this.dedent();\n      this.newline();\n      this.token(\")\");\n    }\n  }\n\n  print(node, parent) {\n    if (!node) return;\n    const oldConcise = this.format.concise;\n\n    if (node._compact) {\n      this.format.concise = true;\n    }\n\n    const printMethod = this[node.type];\n\n    if (!printMethod) {\n      throw new ReferenceError(`unknown node of type ${JSON.stringify(node.type)} with constructor ${JSON.stringify(node && node.constructor.name)}`);\n    }\n\n    this._printStack.push(node);\n\n    const oldInAux = this._insideAux;\n    this._insideAux = !node.loc;\n\n    this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n    let needsParens = n.needsParens(node, parent, this._printStack);\n\n    if (this.format.retainFunctionParens && node.type === \"FunctionExpression\" && node.extra && node.extra.parenthesized) {\n      needsParens = true;\n    }\n\n    if (needsParens) this.token(\"(\");\n\n    this._printLeadingComments(node);\n\n    const loc = t.isProgram(node) || t.isFile(node) ? null : node.loc;\n    this.withSource(\"start\", loc, () => {\n      printMethod.call(this, node, parent);\n    });\n\n    this._printTrailingComments(node);\n\n    if (needsParens) this.token(\")\");\n\n    this._printStack.pop();\n\n    this.format.concise = oldConcise;\n    this._insideAux = oldInAux;\n  }\n\n  _maybeAddAuxComment(enteredPositionlessNode) {\n    if (enteredPositionlessNode) this._printAuxBeforeComment();\n    if (!this._insideAux) this._printAuxAfterComment();\n  }\n\n  _printAuxBeforeComment() {\n    if (this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = true;\n    const comment = this.format.auxiliaryCommentBefore;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  _printAuxAfterComment() {\n    if (!this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = false;\n    const comment = this.format.auxiliaryCommentAfter;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  getPossibleRaw(node) {\n    const extra = node.extra;\n\n    if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n      return extra.raw;\n    }\n  }\n\n  printJoin(nodes, parent, opts = {}) {\n    if (!nodes || !nodes.length) return;\n    if (opts.indent) this.indent();\n    const newlineOpts = {\n      addNewlines: opts.addNewlines\n    };\n\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (!node) continue;\n      if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n      this.print(node, parent);\n\n      if (opts.iterator) {\n        opts.iterator(node, i);\n      }\n\n      if (opts.separator && i < nodes.length - 1) {\n        opts.separator.call(this);\n      }\n\n      if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  }\n\n  printAndIndentOnComments(node, parent) {\n    const indent = node.leadingComments && node.leadingComments.length > 0;\n    if (indent) this.indent();\n    this.print(node, parent);\n    if (indent) this.dedent();\n  }\n\n  printBlock(parent) {\n    const node = parent.body;\n\n    if (!t.isEmptyStatement(node)) {\n      this.space();\n    }\n\n    this.print(node, parent);\n  }\n\n  _printTrailingComments(node) {\n    this._printComments(this._getComments(false, node));\n  }\n\n  _printLeadingComments(node) {\n    this._printComments(this._getComments(true, node));\n  }\n\n  printInnerComments(node, indent = true) {\n    if (!node.innerComments || !node.innerComments.length) return;\n    if (indent) this.indent();\n\n    this._printComments(node.innerComments);\n\n    if (indent) this.dedent();\n  }\n\n  printSequence(nodes, parent, opts = {}) {\n    opts.statement = true;\n    return this.printJoin(nodes, parent, opts);\n  }\n\n  printList(items, parent, opts = {}) {\n    if (opts.separator == null) {\n      opts.separator = commaSeparator;\n    }\n\n    return this.printJoin(items, parent, opts);\n  }\n\n  _printNewline(leading, node, parent, opts) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    let lines = 0;\n\n    if (this._buf.hasContent()) {\n      if (!leading) lines++;\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n      const needs = leading ? n.needsWhitespaceBefore : n.needsWhitespaceAfter;\n      if (needs(node, parent)) lines++;\n    }\n\n    this.newline(lines);\n  }\n\n  _getComments(leading, node) {\n    return node && (leading ? node.leadingComments : node.trailingComments) || [];\n  }\n\n  _printComment(comment) {\n    if (!this.format.shouldPrintComment(comment.value)) return;\n    if (comment.ignore) return;\n    if (this._printedComments.has(comment)) return;\n\n    this._printedComments.add(comment);\n\n    if (comment.start != null) {\n      if (this._printedCommentStarts[comment.start]) return;\n      this._printedCommentStarts[comment.start] = true;\n    }\n\n    const isBlockComment = comment.type === \"CommentBlock\";\n    this.newline(this._buf.hasContent() && !this._noLineTerminator && isBlockComment ? 1 : 0);\n    if (!this.endsWith(\"[\") && !this.endsWith(\"{\")) this.space();\n    let val = !isBlockComment && !this._noLineTerminator ? `//${comment.value}\\n` : `/*${comment.value}*/`;\n\n    if (isBlockComment && this.format.indent.adjustMultilineComment) {\n      const offset = comment.loc && comment.loc.start.column;\n\n      if (offset) {\n        const newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n        val = val.replace(newlineRegex, \"\\n\");\n      }\n\n      const indentSize = Math.max(this._getIndent().length, this._buf.getCurrentColumn());\n      val = val.replace(/\\n(?!$)/g, `\\n${(0, _repeat.default)(\" \", indentSize)}`);\n    }\n\n    if (this.endsWith(\"/\")) this._space();\n    this.withSource(\"start\", comment.loc, () => {\n      this._append(val);\n    });\n    this.newline(isBlockComment && !this._noLineTerminator ? 1 : 0);\n  }\n\n  _printComments(comments) {\n    if (!comments || !comments.length) return;\n\n    for (const comment of comments) {\n      this._printComment(comment);\n    }\n  }\n\n}\n\nexports.default = Printer;\nObject.assign(Printer.prototype, generatorFunctions);\n\nfunction commaSeparator() {\n  this.token(\",\");\n  this.space();\n}"]},"metadata":{},"sourceType":"script"}