{"ast":null,"code":"var counter = 0;\n/**\n * @function hash\n *\n * @description\n * simple bitwise hash of string value\n *\n * @param {string} key ASCII only\n * @return {number} 32-bit positive integer hash\n */\n\nexport var hash = function hash(key) {\n  var stringToHash = key + \"-\" + counter;\n  var hashValue = 5381,\n      index = stringToHash.length;\n\n  while (index) {\n    hashValue = hashValue * 33 ^ stringToHash.charCodeAt(--index);\n  }\n\n  return \"scoped__\" + key + \"__\" + (hashValue >>> 0);\n};\n/**\n * @function hashKeys\n *\n * @description\n * create a hash map based on the keys passed\n *\n * @param {Array<string>} keys the keys to hash\n * @returns {Object} the hashmap of key => has pairs\n */\n\nexport var hashKeys = function hashKeys(keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = hash(key);\n    return hashMap;\n  }, {});\n};","map":null,"metadata":{},"sourceType":"module"}