{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport Fade from './Fade';\nimport Header from './ToastHeader';\nimport Body from './ToastBody';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  animation: true,\n  autohide: false,\n  delay: 3000,\n  show: true,\n  transition: Fade\n};\n\nvar Toast = function Toast(_ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      Transition = _ref.transition,\n      show = _ref.show,\n      animation = _ref.animation,\n      delay = _ref.delay,\n      autohide = _ref.autohide,\n      onClose = _ref.onClose,\n      innerRef = _ref.innerRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\", \"innerRef\"]);\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  delayRef.current = delay;\n  onCloseRef.current = onClose;\n  useEffect(function () {\n    if (!(autohide && show)) {\n      return undefined;\n    }\n\n    var autohideHandle = setTimeout(function () {\n      onCloseRef.current();\n    }, delayRef.current);\n    return function () {\n      clearTimeout(autohideHandle);\n    };\n  }, [autohide, show]);\n  var useAnimation = Transition && animation;\n  var toast = React.createElement(\"div\", _extends({}, props, {\n    ref: innerRef,\n    className: classNames(bsPrefix, className, !useAnimation && show && 'show'),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  var toastContext = {\n    onClose: onClose\n  };\n  return React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, useAnimation ? React.createElement(Transition, {\n    in: show\n  }, toast) : toast);\n};\n\nToast.defaultProps = defaultProps;\nvar DecoratedToast = createBootstrapComponent(Toast, 'toast');\nDecoratedToast.Body = Body;\nDecoratedToast.Header = Header;\nexport default DecoratedToast;","map":{"version":3,"sources":["/home/hyper/Downloads/bookstore/node_modules/react-bootstrap/es/Toast.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useEffect","useRef","classNames","Fade","Header","Body","createBootstrapComponent","ToastContext","defaultProps","animation","autohide","delay","show","transition","Toast","_ref","bsPrefix","className","children","Transition","onClose","innerRef","props","delayRef","onCloseRef","current","undefined","autohideHandle","setTimeout","clearTimeout","useAnimation","toast","createElement","ref","role","toastContext","Provider","value","in","DecoratedToast"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport Fade from './Fade';\nimport Header from './ToastHeader';\nimport Body from './ToastBody';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  animation: true,\n  autohide: false,\n  delay: 3000,\n  show: true,\n  transition: Fade\n};\n\nvar Toast = function Toast(_ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      Transition = _ref.transition,\n      show = _ref.show,\n      animation = _ref.animation,\n      delay = _ref.delay,\n      autohide = _ref.autohide,\n      onClose = _ref.onClose,\n      innerRef = _ref.innerRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\", \"innerRef\"]);\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  delayRef.current = delay;\n  onCloseRef.current = onClose;\n  useEffect(function () {\n    if (!(autohide && show)) {\n      return undefined;\n    }\n\n    var autohideHandle = setTimeout(function () {\n      onCloseRef.current();\n    }, delayRef.current);\n    return function () {\n      clearTimeout(autohideHandle);\n    };\n  }, [autohide, show]);\n  var useAnimation = Transition && animation;\n  var toast = React.createElement(\"div\", _extends({}, props, {\n    ref: innerRef,\n    className: classNames(bsPrefix, className, !useAnimation && show && 'show'),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  var toastContext = {\n    onClose: onClose\n  };\n  return React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, useAnimation ? React.createElement(Transition, {\n    in: show\n  }, toast) : toast);\n};\n\nToast.defaultProps = defaultProps;\nvar DecoratedToast = createBootstrapComponent(Toast, 'toast');\nDecoratedToast.Body = Body;\nDecoratedToast.Header = Header;\nexport default DecoratedToast;"]},"metadata":{},"sourceType":"module"}