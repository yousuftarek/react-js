{"ast":null,"code":"\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\n(0, _utils.default)(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXElement\", \"JSXFragment\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\n(0, _utils.default)(\"JSXEmptyExpression\", {\n  aliases: [\"JSX\"]\n});\n(0, _utils.default)(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"JSXEmptyExpression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  aliases: [\"JSX\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    namespace: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\n    },\n    selfClosing: {\n      default: false,\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    attributes: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  aliases: [\"JSX\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXText\", {\n  aliases: [\"JSX\", \"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningFragment\")\n    },\n    closingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXClosingFragment\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\n(0, _utils.default)(\"JSXOpeningFragment\", {\n  aliases: [\"JSX\", \"Immutable\"]\n});\n(0, _utils.default)(\"JSXClosingFragment\", {\n  aliases: [\"JSX\", \"Immutable\"]\n});","map":{"version":3,"sources":["/home/hyper/Downloads/bookstore/node_modules/@babel/types/lib/definitions/jsx.js"],"names":["_utils","_interopRequireWildcard","require","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","default","visitor","aliases","fields","name","validate","assertNodeType","value","optional","builder","openingElement","closingElement","children","chain","assertValueType","assertEach","expression","object","property","namespace","selfClosing","attributes","typeParameters","argument","openingFragment","closingFragment"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n(0, _utils.default)(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXElement\", \"JSXFragment\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\n(0, _utils.default)(\"JSXEmptyExpression\", {\n  aliases: [\"JSX\"]\n});\n(0, _utils.default)(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"JSXEmptyExpression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  aliases: [\"JSX\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    namespace: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\")\n    },\n    selfClosing: {\n      default: false,\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    attributes: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  aliases: [\"JSX\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXText\", {\n  aliases: [\"JSX\", \"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningFragment\")\n    },\n    closingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXClosingFragment\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\n(0, _utils.default)(\"JSXOpeningFragment\", {\n  aliases: [\"JSX\", \"Immutable\"]\n});\n(0, _utils.default)(\"JSXClosingFragment\", {\n  aliases: [\"JSX\", \"Immutable\"]\n});"]},"metadata":{},"sourceType":"script"}