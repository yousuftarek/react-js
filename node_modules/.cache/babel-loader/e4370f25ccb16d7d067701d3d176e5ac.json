{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/hyper/Downloads/gronthik/bookstore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.typeIs = typeIs;\nexports.validateType = validateType;\nexports.validateOptional = validateOptional;\nexports.validateOptionalType = validateOptionalType;\nexports.arrayOf = arrayOf;\nexports.arrayOfType = arrayOfType;\nexports.validateArrayOfType = validateArrayOfType;\nexports.assertEach = assertEach;\nexports.assertOneOf = assertOneOf;\nexports.assertNodeType = assertNodeType;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertValueType = assertValueType;\nexports.chain = chain;\nexports.default = defineType;\nexports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.FLIPPED_ALIAS_KEYS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = void 0;\n\nvar _is = _interopRequireDefault(require(\"../validators/is\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar VISITOR_KEYS = {};\nexports.VISITOR_KEYS = VISITOR_KEYS;\nvar ALIAS_KEYS = {};\nexports.ALIAS_KEYS = ALIAS_KEYS;\nvar FLIPPED_ALIAS_KEYS = {};\nexports.FLIPPED_ALIAS_KEYS = FLIPPED_ALIAS_KEYS;\nvar NODE_FIELDS = {};\nexports.NODE_FIELDS = NODE_FIELDS;\nvar BUILDER_KEYS = {};\nexports.BUILDER_KEYS = BUILDER_KEYS;\nvar DEPRECATED_KEYS = {};\nexports.DEPRECATED_KEYS = DEPRECATED_KEYS;\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else if (val === undefined) {\n    return \"undefined\";\n  } else {\n    return typeof val;\n  }\n}\n\nfunction validate(validate) {\n  return {\n    validate: validate\n  };\n}\n\nfunction typeIs(typeName) {\n  return typeof typeName === \"string\" ? assertNodeType(typeName) : assertNodeType.apply(void 0, _toConsumableArray(typeName));\n}\n\nfunction validateType(typeName) {\n  return validate(typeIs(typeName));\n}\n\nfunction validateOptional(validate) {\n  return {\n    validate: validate,\n    optional: true\n  };\n}\n\nfunction validateOptionalType(typeName) {\n  return {\n    validate: typeIs(typeName),\n    optional: true\n  };\n}\n\nfunction arrayOf(elementType) {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nfunction arrayOfType(typeName) {\n  return arrayOf(typeIs(typeName));\n}\n\nfunction validateArrayOfType(typeName) {\n  return validate(arrayOfType(typeName));\n}\n\nfunction assertEach(callback) {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (var i = 0; i < val.length; i++) {\n      callback(node, \"\".concat(key, \"[\").concat(i, \"]\"), val[i]);\n    }\n  }\n\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  function validate(node, key, val) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(\"Property \".concat(key, \" expected value to be one of \").concat(JSON.stringify(values), \" but got \").concat(JSON.stringify(val)));\n    }\n  }\n\n  validate.oneOf = values;\n  return validate;\n}\n\nfunction assertNodeType() {\n  for (var _len2 = arguments.length, types = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    types[_key2] = arguments[_key2];\n  }\n\n  function validate(node, key, val) {\n    var valid = false;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = types[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var type = _step.value;\n\n        if ((0, _is.default)(type, val)) {\n          valid = true;\n          break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(\"Property \".concat(key, \" of \").concat(node.type, \" expected node to be of a type \").concat(JSON.stringify(types), \" \") + \"but instead got \".concat(JSON.stringify(val && val.type)));\n    }\n  }\n\n  validate.oneOfNodeTypes = types;\n  return validate;\n}\n\nfunction assertNodeOrValueType() {\n  for (var _len3 = arguments.length, types = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    types[_key3] = arguments[_key3];\n  }\n\n  function validate(node, key, val) {\n    var valid = false;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = types[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var type = _step2.value;\n\n        if (getType(val) === type || (0, _is.default)(type, val)) {\n          valid = true;\n          break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(\"Property \".concat(key, \" of \").concat(node.type, \" expected node to be of a type \").concat(JSON.stringify(types), \" \") + \"but instead got \".concat(JSON.stringify(val && val.type)));\n    }\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n  return validate;\n}\n\nfunction assertValueType(type) {\n  function validate(node, key, val) {\n    var valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(\"Property \".concat(key, \" expected type of \").concat(type, \" but got \").concat(getType(val)));\n    }\n  }\n\n  validate.type = type;\n  return validate;\n}\n\nfunction chain() {\n  for (var _len4 = arguments.length, fns = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    fns[_key4] = arguments[_key4];\n  }\n\n  function validate() {\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = fns[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var fn = _step3.value;\n        fn.apply(void 0, arguments);\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  }\n\n  validate.chainOf = fns;\n  return validate;\n}\n\nfunction defineType(type) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var inherits = opts.inherits && store[opts.inherits] || {};\n  var fields = opts.fields || inherits.fields || {};\n  var visitor = opts.visitor || inherits.visitor || [];\n  var aliases = opts.aliases || inherits.aliases || [];\n  var builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = visitor.concat(builder)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var key = _step4.value;\n      fields[key] = fields[key] || {};\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(fields); _i < _Object$keys.length; _i++) {\n    var _key5 = _Object$keys[_i];\n    var field = fields[_key5];\n\n    if (builder.indexOf(_key5) === -1) {\n      field.optional = true;\n    }\n\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate) {\n      field.validate = assertValueType(getType(field.default));\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type] = opts.aliases = aliases;\n  aliases.forEach(function (alias) {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type);\n  });\n  store[type] = opts;\n}\n\nvar store = {};","map":{"version":3,"sources":["/home/hyper/Downloads/gronthik/bookstore/node_modules/@babel/types/lib/definitions/utils.js"],"names":["Object","defineProperty","exports","value","validate","typeIs","validateType","validateOptional","validateOptionalType","arrayOf","arrayOfType","validateArrayOfType","assertEach","assertOneOf","assertNodeType","assertNodeOrValueType","assertValueType","chain","default","defineType","DEPRECATED_KEYS","BUILDER_KEYS","NODE_FIELDS","FLIPPED_ALIAS_KEYS","ALIAS_KEYS","VISITOR_KEYS","_is","_interopRequireDefault","require","obj","__esModule","getType","val","Array","isArray","undefined","typeName","optional","elementType","callback","validator","node","key","i","length","each","values","indexOf","TypeError","JSON","stringify","oneOf","types","valid","type","oneOfNodeTypes","oneOfNodeOrValueTypes","fns","fn","chainOf","opts","inherits","store","fields","visitor","aliases","builder","deprecatedAlias","concat","keys","field","forEach","alias","push"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.typeIs = typeIs;\nexports.validateType = validateType;\nexports.validateOptional = validateOptional;\nexports.validateOptionalType = validateOptionalType;\nexports.arrayOf = arrayOf;\nexports.arrayOfType = arrayOfType;\nexports.validateArrayOfType = validateArrayOfType;\nexports.assertEach = assertEach;\nexports.assertOneOf = assertOneOf;\nexports.assertNodeType = assertNodeType;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertValueType = assertValueType;\nexports.chain = chain;\nexports.default = defineType;\nexports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.FLIPPED_ALIAS_KEYS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = void 0;\n\nvar _is = _interopRequireDefault(require(\"../validators/is\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst VISITOR_KEYS = {};\nexports.VISITOR_KEYS = VISITOR_KEYS;\nconst ALIAS_KEYS = {};\nexports.ALIAS_KEYS = ALIAS_KEYS;\nconst FLIPPED_ALIAS_KEYS = {};\nexports.FLIPPED_ALIAS_KEYS = FLIPPED_ALIAS_KEYS;\nconst NODE_FIELDS = {};\nexports.NODE_FIELDS = NODE_FIELDS;\nconst BUILDER_KEYS = {};\nexports.BUILDER_KEYS = BUILDER_KEYS;\nconst DEPRECATED_KEYS = {};\nexports.DEPRECATED_KEYS = DEPRECATED_KEYS;\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else if (val === undefined) {\n    return \"undefined\";\n  } else {\n    return typeof val;\n  }\n}\n\nfunction validate(validate) {\n  return {\n    validate\n  };\n}\n\nfunction typeIs(typeName) {\n  return typeof typeName === \"string\" ? assertNodeType(typeName) : assertNodeType(...typeName);\n}\n\nfunction validateType(typeName) {\n  return validate(typeIs(typeName));\n}\n\nfunction validateOptional(validate) {\n  return {\n    validate,\n    optional: true\n  };\n}\n\nfunction validateOptionalType(typeName) {\n  return {\n    validate: typeIs(typeName),\n    optional: true\n  };\n}\n\nfunction arrayOf(elementType) {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nfunction arrayOfType(typeName) {\n  return arrayOf(typeIs(typeName));\n}\n\nfunction validateArrayOfType(typeName) {\n  return validate(arrayOfType(typeName));\n}\n\nfunction assertEach(callback) {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      callback(node, `${key}[${i}]`, val[i]);\n    }\n  }\n\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf(...values) {\n  function validate(node, key, val) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`);\n    }\n  }\n\n  validate.oneOf = values;\n  return validate;\n}\n\nfunction assertNodeType(...types) {\n  function validate(node, key, val) {\n    let valid = false;\n\n    for (const type of types) {\n      if ((0, _is.default)(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} ` + `but instead got ${JSON.stringify(val && val.type)}`);\n    }\n  }\n\n  validate.oneOfNodeTypes = types;\n  return validate;\n}\n\nfunction assertNodeOrValueType(...types) {\n  function validate(node, key, val) {\n    let valid = false;\n\n    for (const type of types) {\n      if (getType(val) === type || (0, _is.default)(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} ` + `but instead got ${JSON.stringify(val && val.type)}`);\n    }\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n  return validate;\n}\n\nfunction assertValueType(type) {\n  function validate(node, key, val) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`);\n    }\n  }\n\n  validate.type = type;\n  return validate;\n}\n\nfunction chain(...fns) {\n  function validate(...args) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n\n  validate.chainOf = fns;\n  return validate;\n}\n\nfunction defineType(type, opts = {}) {\n  const inherits = opts.inherits && store[opts.inherits] || {};\n  const fields = opts.fields || inherits.fields || {};\n  const visitor = opts.visitor || inherits.visitor || [];\n  const aliases = opts.aliases || inherits.aliases || [];\n  const builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate) {\n      field.validate = assertValueType(getType(field.default));\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type);\n  });\n  store[type] = opts;\n}\n\nconst store = {};"]},"metadata":{},"sourceType":"script"}