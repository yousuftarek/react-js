{"ast":null,"code":"// external dependencies\nimport beautify from 'cssbeautify';\nimport Stylis from 'stylis'; // constants\n\nimport { BEAUTIFY_OPTIONS } from './constants';\n/**\n * @function getProcessedStyles\n *\n * @description\n * get the styles processed by stylis\n *\n * @param {string} rawStyle the style to process\n * @param {Object} props the props passed to the component\n * @param {boolean} props.isCompressed is compressed CSS output requested\n * @param {boolean} props.isPrefixed is vendor-prefixed CSS requested\n * @returns {string} the processed styles\n */\n\nexport var getProcessedStyles = function getProcessedStyles(rawStyle, _ref) {\n  var isCompressed = _ref.isCompressed,\n      isPrefixed = _ref.isPrefixed;\n  return new Stylis({\n    compress: isCompressed,\n    global: false,\n    keyframe: false,\n    prefix: isPrefixed\n  })('', rawStyle);\n};\n/**\n * @function getRenderedStyles\n *\n * @description\n * get the styles rendered in the HTML tag\n *\n * @param {string} rawStyle the style to process\n * @param {Object} props the props passed to the component\n * @param {boolean} props.isMinified is minified CSS output requested\n * @returns {string} the styles to use in the rendered tag\n */\n\nexport var getRenderedStyles = function getRenderedStyles(rawStyle, props) {\n  return props.isMinified ? getProcessedStyles(rawStyle, props) : beautify(getProcessedStyles(rawStyle, props), BEAUTIFY_OPTIONS);\n};","map":{"version":3,"sources":["/home/hyper/Downloads/gronthik/bookstore/node_modules/react-style-tag/es/styles.js"],"names":["beautify","Stylis","BEAUTIFY_OPTIONS","getProcessedStyles","rawStyle","_ref","isCompressed","isPrefixed","compress","global","keyframe","prefix","getRenderedStyles","props","isMinified"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA;;;;;;;;;;;;;AAYA,OAAO,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,QAA5B,EAAsCC,IAAtC,EAA4C;AAC1E,MAAIC,YAAY,GAAGD,IAAI,CAACC,YAAxB;AAAA,MACIC,UAAU,GAAGF,IAAI,CAACE,UADtB;AAEA,SAAO,IAAIN,MAAJ,CAAW;AAChBO,IAAAA,QAAQ,EAAEF,YADM;AAEhBG,IAAAA,MAAM,EAAE,KAFQ;AAGhBC,IAAAA,QAAQ,EAAE,KAHM;AAIhBC,IAAAA,MAAM,EAAEJ;AAJQ,GAAX,EAKJ,EALI,EAKAH,QALA,CAAP;AAMD,CATM;AAWP;;;;;;;;;;;;AAWA,OAAO,IAAIQ,iBAAiB,GAAG,SAASA,iBAAT,CAA2BR,QAA3B,EAAqCS,KAArC,EAA4C;AACzE,SAAOA,KAAK,CAACC,UAAN,GAAmBX,kBAAkB,CAACC,QAAD,EAAWS,KAAX,CAArC,GAAyDb,QAAQ,CAACG,kBAAkB,CAACC,QAAD,EAAWS,KAAX,CAAnB,EAAsCX,gBAAtC,CAAxE;AACD,CAFM","sourcesContent":["// external dependencies\nimport beautify from 'cssbeautify';\nimport Stylis from 'stylis';\n\n// constants\nimport { BEAUTIFY_OPTIONS } from './constants';\n\n/**\n * @function getProcessedStyles\n *\n * @description\n * get the styles processed by stylis\n *\n * @param {string} rawStyle the style to process\n * @param {Object} props the props passed to the component\n * @param {boolean} props.isCompressed is compressed CSS output requested\n * @param {boolean} props.isPrefixed is vendor-prefixed CSS requested\n * @returns {string} the processed styles\n */\nexport var getProcessedStyles = function getProcessedStyles(rawStyle, _ref) {\n  var isCompressed = _ref.isCompressed,\n      isPrefixed = _ref.isPrefixed;\n  return new Stylis({\n    compress: isCompressed,\n    global: false,\n    keyframe: false,\n    prefix: isPrefixed\n  })('', rawStyle);\n};\n\n/**\n * @function getRenderedStyles\n *\n * @description\n * get the styles rendered in the HTML tag\n *\n * @param {string} rawStyle the style to process\n * @param {Object} props the props passed to the component\n * @param {boolean} props.isMinified is minified CSS output requested\n * @returns {string} the styles to use in the rendered tag\n */\nexport var getRenderedStyles = function getRenderedStyles(rawStyle, props) {\n  return props.isMinified ? getProcessedStyles(rawStyle, props) : beautify(getProcessedStyles(rawStyle, props), BEAUTIFY_OPTIONS);\n};"]},"metadata":{},"sourceType":"module"}