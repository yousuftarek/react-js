{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nconst initialState = {};\nconst middleware = [thunk];\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\nconst store = createStore(rootReducer, persistedState, compose(applyMiddleware(...middleware) // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport default store;","map":{"version":3,"sources":["/home/gronthik/Downloads/gronthik.com/gronthikfrontend/bookstore/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","rootReducer","initialState","middleware","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","persistedState","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;;AAEA,SAASI,kBAAT,CAA4BC,KAA5B,EAAkC;AAC9B,MAAI;AACA,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACH,GAHD,CAGE,OAAMK,CAAN,EAAS;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAED,SAASG,oBAAT,GAA+B;AAC3B,MAAG;AACC,UAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIT,eAAe,KAAK,IAAxB,EAA8B,OAAOU,SAAP;AAC9B,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AACH,GAJD,CAIE,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAED,MAAMO,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,KAAK,GAAGvB,WAAW,CACrBK,WADqB,EAErBiB,cAFqB,EAGrBnB,OAAO,CACHD,eAAe,CAAC,GAAGK,UAAJ,CADZ,CAEH;AAFG,CAHc,CAAzB;AASAgB,KAAK,CAACC,SAAN,CAAgB,MAAMhB,kBAAkB,CAACe,KAAK,CAACE,QAAN,EAAD,CAAxC;AAEA,eAAeF,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nfunction saveToLocalStorage(state){\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state', serializedState)\n    } catch(e) {\n        console.log(e)\n    }\n}\n\nfunction loadFromLocalStorage(){\n    try{\n        const serializedState = localStorage.getItem('state')\n        if (serializedState === null) return undefined\n        return JSON.parse(serializedState)\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nconst persistedState = loadFromLocalStorage()\n\nconst store = createStore(\n    rootReducer,\n    persistedState,\n    compose(\n        applyMiddleware(...middleware),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nstore.subscribe(() => saveToLocalStorage(store.getState()))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}