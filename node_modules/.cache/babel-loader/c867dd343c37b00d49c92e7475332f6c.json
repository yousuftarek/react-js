{"ast":null,"code":"import _objectSpread from \"/home/hyper/yousuftarek/bookstore/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_BOOKS, FETCH_BOOK, ADD_TO_CART, DELETE_FROM_CART, UPDATE_CART_QUANTITY, EMPTY_CART, FETCH_REVIEWS, SORT_BOOKS, SELECT_AUTHOR, SELECT_PUBLISHER, SEE_MORE } from '../actions/types';\nconst initialState = {\n  items: [],\n  item: {},\n  cart: [],\n  reviews: [],\n  bookPages: null,\n  selectedOption: null,\n  selectedAuthor: null,\n  selectedPublisher: null,\n  seemore: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_BOOKS:\n      return _objectSpread({}, state, {\n        items: action.payload,\n        selectedOption: null\n      });\n\n    case FETCH_BOOK:\n      return _objectSpread({}, state, {\n        item: action.payload\n      });\n\n    case SELECT_AUTHOR:\n      return _objectSpread({}, state, {\n        selectedAuthor: action.payload\n      });\n\n    case SELECT_PUBLISHER:\n      return _objectSpread({}, state, {\n        selectedPublisher: action.payload\n      });\n\n    case ADD_TO_CART:\n      if (!state.cart.find(book => book.id === action.payload.id)) {\n        return _objectSpread({}, state, {\n          cart: state.cart == undefined ? [action.payload] : [...state.cart, action.payload]\n        });\n      }\n\n    case DELETE_FROM_CART:\n      return _objectSpread({}, state, {\n        cart: [...state.cart.slice(0, action.payload), ...state.cart.slice(action.payload + 1)]\n      });\n\n    case SORT_BOOKS:\n      return _objectSpread({}, state, {\n        items: action.payload,\n        selectedOption: action.selectedOption\n      });\n\n    case UPDATE_CART_QUANTITY:\n      let books = [...state.cart];\n\n      if (action.quantity >= 1) {\n        books.find(book => book.id == action.payload).quantity = action.quantity;\n      }\n\n      return _objectSpread({}, state, {\n        cart: books\n      });\n\n    case EMPTY_CART:\n      return _objectSpread({}, state, {\n        cart: []\n      });\n\n    case FETCH_REVIEWS:\n      return _objectSpread({}, state, {\n        reviews: action.payload\n      });\n\n    case SEE_MORE:\n      return _objectSpread({}, state, {\n        seemore: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/hyper/yousuftarek/bookstore/src/reducers/bookReducer.js"],"names":["FETCH_BOOKS","FETCH_BOOK","ADD_TO_CART","DELETE_FROM_CART","UPDATE_CART_QUANTITY","EMPTY_CART","FETCH_REVIEWS","SORT_BOOKS","SELECT_AUTHOR","SELECT_PUBLISHER","SEE_MORE","initialState","items","item","cart","reviews","bookPages","selectedOption","selectedAuthor","selectedPublisher","seemore","state","action","type","payload","find","book","id","undefined","slice","books","quantity"],"mappings":"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","sourcesContent":["  import {\n    FETCH_BOOKS,\n    FETCH_BOOK,\n    ADD_TO_CART,\n    DELETE_FROM_CART,\n    UPDATE_CART_QUANTITY,\n    EMPTY_CART,\n    FETCH_REVIEWS,\n    SORT_BOOKS,\n    SELECT_AUTHOR,\n    SELECT_PUBLISHER,\n    SEE_MORE\n  } from '../actions/types';\n\n  const initialState = {\n    items: [],\n    item: {},\n    cart: [],\n    reviews: [],\n    bookPages: null,\n    selectedOption: null,\n    selectedAuthor: null,\n    selectedPublisher: null,\n    seemore: null\n  };\n\n  export default function (state = initialState, action) {\n    switch (action.type) {\n      case FETCH_BOOKS:\n        return {\n          ...state,\n          items: action.payload,\n            selectedOption: null,\n        };\n      case FETCH_BOOK:\n        return {\n          ...state,\n          item: action.payload\n        };\n      case SELECT_AUTHOR:\n        return {\n          ...state,\n          selectedAuthor: action.payload\n        };\n      case SELECT_PUBLISHER:\n        return {\n          ...state,\n          selectedPublisher: action.payload\n        };\n      case ADD_TO_CART:\n        if (!state.cart.find((book) => book.id === action.payload.id)) {\n          return {\n            ...state,\n            cart: state.cart == undefined ? [action.payload] : [...state.cart, action.payload]\n          };\n        }\n\n        case DELETE_FROM_CART:\n          return {\n            ...state,\n            cart: [\n              ...state.cart.slice(0, action.payload),\n              ...state.cart.slice(action.payload + 1)\n            ]\n          };\n\n        case SORT_BOOKS:\n          return {\n            ...state,\n            items: action.payload,\n              selectedOption: action.selectedOption\n          }\n\n          case UPDATE_CART_QUANTITY:\n            let books = [...state.cart];\n            if (action.quantity >= 1) {\n              books.find(book => book.id == action.payload).quantity = action.quantity;\n            }\n            return {\n              ...state,\n              cart: books\n            };\n          case EMPTY_CART:\n            return {\n              ...state,\n              cart: []\n            };\n          case FETCH_REVIEWS:\n            return {\n              ...state,\n              reviews: action.payload\n            };\n            case SEE_MORE:\n              return {\n                ...state,\n                seemore: action.payload,\n              };\n          default:\n            return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}