{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = valueToNode;\n\nfunction _isPlainObject() {\n  var data = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\n  _isPlainObject = function _isPlainObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _isRegExp() {\n  var data = _interopRequireDefault(require(\"lodash/isRegExp\"));\n\n  _isRegExp = function _isRegExp() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _isValidIdentifier = _interopRequireDefault(require(\"../validators/isValidIdentifier\"));\n\nvar _generated = require(\"../builders/generated\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return (0, _generated.identifier)(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return (0, _generated.booleanLiteral)(value);\n  }\n\n  if (value === null) {\n    return (0, _generated.nullLiteral)();\n  }\n\n  if (typeof value === \"string\") {\n    return (0, _generated.stringLiteral)(value);\n  }\n\n  if (typeof value === \"number\") {\n    var result;\n\n    if (Number.isFinite(value)) {\n      result = (0, _generated.numericLiteral)(Math.abs(value));\n    } else {\n      var numerator;\n\n      if (Number.isNaN(value)) {\n        numerator = (0, _generated.numericLiteral)(0);\n      } else {\n        numerator = (0, _generated.numericLiteral)(1);\n      }\n\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = (0, _generated.unaryExpression)(\"-\", result);\n    }\n\n    return result;\n  }\n\n  if ((0, _isRegExp().default)(value)) {\n    var pattern = value.source;\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return (0, _generated.regExpLiteral)(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\n  }\n\n  if ((0, _isPlainObject().default)(value)) {\n    var props = [];\n\n    for (var _i = 0, _Object$keys = Object.keys(value); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      var nodeKey = void 0;\n\n      if ((0, _isValidIdentifier.default)(key)) {\n        nodeKey = (0, _generated.identifier)(key);\n      } else {\n        nodeKey = (0, _generated.stringLiteral)(key);\n      }\n\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n    }\n\n    return (0, _generated.objectExpression)(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}","map":{"version":3,"sources":["/home/hyper/Downloads/gronthik/bookstore/node_modules/@babel/types/lib/converters/valueToNode.js"],"names":["Object","defineProperty","exports","value","default","valueToNode","_isPlainObject","data","_interopRequireDefault","require","_isRegExp","_isValidIdentifier","_generated","obj","__esModule","undefined","identifier","booleanLiteral","nullLiteral","stringLiteral","result","Number","isFinite","numericLiteral","Math","abs","numerator","isNaN","binaryExpression","is","unaryExpression","pattern","source","flags","toString","match","regExpLiteral","Array","isArray","arrayExpression","map","props","keys","key","nodeKey","push","objectProperty","objectExpression","Error"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = valueToNode;\n\nfunction _isPlainObject() {\n  const data = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\n  _isPlainObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _isRegExp() {\n  const data = _interopRequireDefault(require(\"lodash/isRegExp\"));\n\n  _isRegExp = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _isValidIdentifier = _interopRequireDefault(require(\"../validators/isValidIdentifier\"));\n\nvar _generated = require(\"../builders/generated\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return (0, _generated.identifier)(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return (0, _generated.booleanLiteral)(value);\n  }\n\n  if (value === null) {\n    return (0, _generated.nullLiteral)();\n  }\n\n  if (typeof value === \"string\") {\n    return (0, _generated.stringLiteral)(value);\n  }\n\n  if (typeof value === \"number\") {\n    let result;\n\n    if (Number.isFinite(value)) {\n      result = (0, _generated.numericLiteral)(Math.abs(value));\n    } else {\n      let numerator;\n\n      if (Number.isNaN(value)) {\n        numerator = (0, _generated.numericLiteral)(0);\n      } else {\n        numerator = (0, _generated.numericLiteral)(1);\n      }\n\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = (0, _generated.unaryExpression)(\"-\", result);\n    }\n\n    return result;\n  }\n\n  if ((0, _isRegExp().default)(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return (0, _generated.regExpLiteral)(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\n  }\n\n  if ((0, _isPlainObject().default)(value)) {\n    const props = [];\n\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n\n      if ((0, _isValidIdentifier.default)(key)) {\n        nodeKey = (0, _generated.identifier)(key);\n      } else {\n        nodeKey = (0, _generated.stringLiteral)(key);\n      }\n\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n    }\n\n    return (0, _generated.objectExpression)(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}"]},"metadata":{},"sourceType":"script"}