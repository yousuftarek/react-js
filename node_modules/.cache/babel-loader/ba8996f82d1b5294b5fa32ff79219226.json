{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = builder;\n\nfunction _clone() {\n  const data = _interopRequireDefault(require(\"lodash/clone\"));\n\n  _clone = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _definitions = require(\"../definitions\");\n\nvar _validate = _interopRequireDefault(require(\"../validators/validate\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction builder(type, ...args) {\n  const keys = _definitions.BUILDER_KEYS[type];\n  const countArgs = args.length;\n\n  if (countArgs > keys.length) {\n    throw new Error(`${type}: Too many arguments passed. Received ${countArgs} but can receive no more than ${keys.length}`);\n  }\n\n  const node = {\n    type\n  };\n  let i = 0;\n  keys.forEach(key => {\n    const field = _definitions.NODE_FIELDS[type][key];\n    let arg;\n    if (i < countArgs) arg = args[i];\n    if (arg === undefined) arg = (0, _clone().default)(field.default);\n    node[key] = arg;\n    i++;\n  });\n\n  for (const key of Object.keys(node)) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n\n  return node;\n}","map":{"version":3,"sources":["/home/gronthik/Downloads/gronthik.com/gronthikfrontend/bookstore/node_modules/@babel/types/lib/builders/builder.js"],"names":["Object","defineProperty","exports","value","default","builder","_clone","data","_interopRequireDefault","require","_definitions","_validate","obj","__esModule","type","args","keys","BUILDER_KEYS","countArgs","length","Error","node","i","forEach","key","field","NODE_FIELDS","arg","undefined"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,OAAlB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAnC;;AAEAH,EAAAA,MAAM,GAAG,YAAY;AACnB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIG,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIE,SAAS,GAAGH,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAtC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAE/F,SAASP,OAAT,CAAiBS,IAAjB,EAAuB,GAAGC,IAA1B,EAAgC;AAC9B,QAAMC,IAAI,GAAGN,YAAY,CAACO,YAAb,CAA0BH,IAA1B,CAAb;AACA,QAAMI,SAAS,GAAGH,IAAI,CAACI,MAAvB;;AAEA,MAAID,SAAS,GAAGF,IAAI,CAACG,MAArB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,CAAW,GAAEN,IAAK,yCAAwCI,SAAU,iCAAgCF,IAAI,CAACG,MAAO,EAAhH,CAAN;AACD;;AAED,QAAME,IAAI,GAAG;AACXP,IAAAA;AADW,GAAb;AAGA,MAAIQ,CAAC,GAAG,CAAR;AACAN,EAAAA,IAAI,CAACO,OAAL,CAAaC,GAAG,IAAI;AAClB,UAAMC,KAAK,GAAGf,YAAY,CAACgB,WAAb,CAAyBZ,IAAzB,EAA+BU,GAA/B,CAAd;AACA,QAAIG,GAAJ;AACA,QAAIL,CAAC,GAAGJ,SAAR,EAAmBS,GAAG,GAAGZ,IAAI,CAACO,CAAD,CAAV;AACnB,QAAIK,GAAG,KAAKC,SAAZ,EAAuBD,GAAG,GAAG,CAAC,GAAGrB,MAAM,GAAGF,OAAb,EAAsBqB,KAAK,CAACrB,OAA5B,CAAN;AACvBiB,IAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYG,GAAZ;AACAL,IAAAA,CAAC;AACF,GAPD;;AASA,OAAK,MAAME,GAAX,IAAkBxB,MAAM,CAACgB,IAAP,CAAYK,IAAZ,CAAlB,EAAqC;AACnC,KAAC,GAAGV,SAAS,CAACP,OAAd,EAAuBiB,IAAvB,EAA6BG,GAA7B,EAAkCH,IAAI,CAACG,GAAD,CAAtC;AACD;;AAED,SAAOH,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = builder;\n\nfunction _clone() {\n  const data = _interopRequireDefault(require(\"lodash/clone\"));\n\n  _clone = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _definitions = require(\"../definitions\");\n\nvar _validate = _interopRequireDefault(require(\"../validators/validate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction builder(type, ...args) {\n  const keys = _definitions.BUILDER_KEYS[type];\n  const countArgs = args.length;\n\n  if (countArgs > keys.length) {\n    throw new Error(`${type}: Too many arguments passed. Received ${countArgs} but can receive no more than ${keys.length}`);\n  }\n\n  const node = {\n    type\n  };\n  let i = 0;\n  keys.forEach(key => {\n    const field = _definitions.NODE_FIELDS[type][key];\n    let arg;\n    if (i < countArgs) arg = args[i];\n    if (arg === undefined) arg = (0, _clone().default)(field.default);\n    node[key] = arg;\n    i++;\n  });\n\n  for (const key of Object.keys(node)) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n\n  return node;\n}"]},"metadata":{},"sourceType":"script"}