{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport createChainedFunction from './utils/createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SafeAnchor, _React$Component);\n\n  function SafeAnchor(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = SafeAnchor.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var _this$props = this.props,\n        disabled = _this$props.disabled,\n        href = _this$props.href,\n        onClick = _this$props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        _this$props2$as = _this$props2.as,\n        Component = _this$props2$as === void 0 ? 'a' : _this$props2$as,\n        disabled = _this$props2.disabled,\n        onKeyDown = _this$props2.onKeyDown,\n        innerRef = _this$props2.innerRef,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"as\", \"disabled\", \"onKeyDown\", \"innerRef\"]);\n\n    if (isTrivialHref(props.href)) {\n      props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n      // otherwise, the cursor incorrectly styled (except with role='button')\n\n      props.href = props.href || '#';\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    if (innerRef) props.ref = innerRef;\n    return React.createElement(Component, _extends({}, props, {\n      onClick: this.handleClick,\n      onKeyDown: createChainedFunction(this.handleKeyDown, onKeyDown)\n    }));\n  };\n\n  return SafeAnchor;\n}(React.Component);\n\nexport default SafeAnchor;","map":{"version":3,"sources":["/home/hyper/Downloads/bookstore/node_modules/react-bootstrap/es/SafeAnchor.js"],"names":["_extends","_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","React","createChainedFunction","isTrivialHref","href","trim","SafeAnchor","_React$Component","props","context","_this","call","handleClick","bind","handleKeyDown","_proto","prototype","event","_this$props","disabled","onClick","preventDefault","stopPropagation","key","render","_this$props2","_this$props2$as","as","Component","onKeyDown","innerRef","role","tabIndex","ref","createElement"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport createChainedFunction from './utils/createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SafeAnchor, _React$Component);\n\n  function SafeAnchor(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = SafeAnchor.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var _this$props = this.props,\n        disabled = _this$props.disabled,\n        href = _this$props.href,\n        onClick = _this$props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        _this$props2$as = _this$props2.as,\n        Component = _this$props2$as === void 0 ? 'a' : _this$props2$as,\n        disabled = _this$props2.disabled,\n        onKeyDown = _this$props2.onKeyDown,\n        innerRef = _this$props2.innerRef,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"as\", \"disabled\", \"onKeyDown\", \"innerRef\"]);\n\n    if (isTrivialHref(props.href)) {\n      props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n      // otherwise, the cursor incorrectly styled (except with role='button')\n\n      props.href = props.href || '#';\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    if (innerRef) props.ref = innerRef;\n    return React.createElement(Component, _extends({}, props, {\n      onClick: this.handleClick,\n      onKeyDown: createChainedFunction(this.handleKeyDown, onKeyDown)\n    }));\n  };\n\n  return SafeAnchor;\n}(React.Component);\n\nexport default SafeAnchor;"]},"metadata":{},"sourceType":"module"}