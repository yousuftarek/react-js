{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/hyper/yousuftarek/bookstore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/hyper/yousuftarek/bookstore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = _interopRequireDefault(require(\"../binding\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar renameVisitor = {\n  ReferencedIdentifier: function ReferencedIdentifier(_ref, state) {\n    var node = _ref.node;\n\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n  Scope: function Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n    }\n  },\n  \"AssignmentExpression|Declaration\": function AssignmentExpressionDeclaration(path, state) {\n    var ids = path.getOuterBindingIdentifiers();\n\n    for (var name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n};\n\nvar Renamer =\n/*#__PURE__*/\nfunction () {\n  function Renamer(binding, oldName, newName) {\n    _classCallCheck(this, Renamer);\n\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  _createClass(Renamer, [{\n    key: \"maybeConvertFromExportDeclaration\",\n    value: function maybeConvertFromExportDeclaration(parentDeclar) {\n      var maybeExportDeclar = parentDeclar.parentPath;\n\n      if (!maybeExportDeclar.isExportDeclaration()) {\n        return;\n      }\n\n      if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n        return;\n      }\n\n      (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n    }\n  }, {\n    key: \"maybeConvertFromClassFunctionDeclaration\",\n    value: function maybeConvertFromClassFunctionDeclaration(path) {\n      return;\n      if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n      if (this.binding.kind !== \"hoisted\") return;\n      path.node.id = t.identifier(this.oldName);\n      path.node._blockHoist = 3;\n      path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n    }\n  }, {\n    key: \"maybeConvertFromClassFunctionExpression\",\n    value: function maybeConvertFromClassFunctionExpression(path) {\n      return;\n      if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n      if (this.binding.kind !== \"local\") return;\n      path.node.id = t.identifier(this.oldName);\n      this.binding.scope.parent.push({\n        id: t.identifier(this.newName)\n      });\n      path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n    }\n  }, {\n    key: \"rename\",\n    value: function rename(block) {\n      var binding = this.binding,\n          oldName = this.oldName,\n          newName = this.newName;\n      var scope = binding.scope,\n          path = binding.path;\n      var parentDeclar = path.find(function (path) {\n        return path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression();\n      });\n\n      if (parentDeclar) {\n        var bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n        if (bindingIds[oldName] === binding.identifier) {\n          this.maybeConvertFromExportDeclaration(parentDeclar);\n        }\n      }\n\n      scope.traverse(block || scope.block, renameVisitor, this);\n\n      if (!block) {\n        scope.removeOwnBinding(oldName);\n        scope.bindings[newName] = binding;\n        this.binding.identifier.name = newName;\n      }\n\n      if (binding.type === \"hoisted\") {}\n\n      if (parentDeclar) {\n        this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n        this.maybeConvertFromClassFunctionExpression(parentDeclar);\n      }\n    }\n  }]);\n\n  return Renamer;\n}();\n\nexports.default = Renamer;","map":{"version":3,"sources":["/home/hyper/yousuftarek/bookstore/node_modules/@babel/helpers/node_modules/@babel/traverse/lib/scope/lib/renamer.js"],"names":["Object","defineProperty","exports","value","default","_binding","_interopRequireDefault","require","_helperSplitExportDeclaration","t","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","renameVisitor","ReferencedIdentifier","state","node","name","oldName","newName","Scope","path","scope","bindingIdentifierEquals","binding","identifier","skip","ids","getOuterBindingIdentifiers","Renamer","parentDeclar","maybeExportDeclar","parentPath","isExportDeclaration","isExportDefaultDeclaration","id","isFunctionDeclaration","isClassDeclaration","kind","_blockHoist","replaceWith","variableDeclaration","variableDeclarator","toExpression","isFunctionExpression","isClassExpression","parent","push","assignmentExpression","block","find","isDeclaration","bindingIds","maybeConvertFromExportDeclaration","traverse","removeOwnBinding","bindings","type","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = _interopRequireDefault(require(\"../binding\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n    }\n  },\n\n  \"AssignmentExpression|Declaration\"(path, state) {\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = t.identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = t.identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: t.identifier(this.newName)\n    });\n    path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    scope.traverse(block || scope.block, renameVisitor, this);\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (binding.type === \"hoisted\") {}\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;"]},"metadata":{},"sourceType":"script"}