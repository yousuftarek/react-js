{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/hyper/Downloads/gronthik/bookstore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/hyper/Downloads/gronthik/bookstore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isInteger = _interopRequireDefault(require(\"lodash/isInteger\"));\n\nvar _repeat = _interopRequireDefault(require(\"lodash/repeat\"));\n\nvar _buffer = _interopRequireDefault(require(\"./buffer\"));\n\nvar n = _interopRequireWildcard(require(\"./node\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar generatorFunctions = _interopRequireWildcard(require(\"./generators\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar SCIENTIFIC_NOTATION = /e/i;\nvar ZERO_DECIMAL_INTEGER = /\\.0+$/;\nvar NON_DECIMAL_LITERAL = /^0[box]/;\n\nvar Printer =\n/*#__PURE__*/\nfunction () {\n  function Printer(format, map) {\n    _classCallCheck(this, Printer);\n\n    this.inForStatementInitCounter = 0;\n    this._printStack = [];\n    this._indent = 0;\n    this._insideAux = false;\n    this._printedCommentStarts = {};\n    this._parenPushNewlineState = null;\n    this._noLineTerminator = false;\n    this._printAuxAfterOnNextUserNode = false;\n    this._printedComments = new WeakSet();\n    this._endsWithInteger = false;\n    this._endsWithWord = false;\n    this.format = format || {};\n    this._buf = new _buffer.default(map);\n  }\n\n  _createClass(Printer, [{\n    key: \"generate\",\n    value: function generate(ast) {\n      this.print(ast);\n\n      this._maybeAddAuxComment();\n\n      return this._buf.get();\n    }\n  }, {\n    key: \"indent\",\n    value: function indent() {\n      if (this.format.compact || this.format.concise) return;\n      this._indent++;\n    }\n  }, {\n    key: \"dedent\",\n    value: function dedent() {\n      if (this.format.compact || this.format.concise) return;\n      this._indent--;\n    }\n  }, {\n    key: \"semicolon\",\n    value: function semicolon() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      this._maybeAddAuxComment();\n\n      this._append(\";\", !force);\n    }\n  }, {\n    key: \"rightBrace\",\n    value: function rightBrace() {\n      if (this.format.minified) {\n        this._buf.removeLastSemicolon();\n      }\n\n      this.token(\"}\");\n    }\n  }, {\n    key: \"space\",\n    value: function space() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.format.compact) return;\n\n      if (this._buf.hasContent() && !this.endsWith(\" \") && !this.endsWith(\"\\n\") || force) {\n        this._space();\n      }\n    }\n  }, {\n    key: \"word\",\n    value: function word(str) {\n      if (this._endsWithWord || this.endsWith(\"/\") && str.indexOf(\"/\") === 0) {\n        this._space();\n      }\n\n      this._maybeAddAuxComment();\n\n      this._append(str);\n\n      this._endsWithWord = true;\n    }\n  }, {\n    key: \"number\",\n    value: function number(str) {\n      this.word(str);\n      this._endsWithInteger = (0, _isInteger.default)(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== \".\";\n    }\n  }, {\n    key: \"token\",\n    value: function token(str) {\n      if (str === \"--\" && this.endsWith(\"!\") || str[0] === \"+\" && this.endsWith(\"+\") || str[0] === \"-\" && this.endsWith(\"-\") || str[0] === \".\" && this._endsWithInteger) {\n        this._space();\n      }\n\n      this._maybeAddAuxComment();\n\n      this._append(str);\n    }\n  }, {\n    key: \"newline\",\n    value: function newline(i) {\n      if (this.format.retainLines || this.format.compact) return;\n\n      if (this.format.concise) {\n        this.space();\n        return;\n      }\n\n      if (this.endsWith(\"\\n\\n\")) return;\n      if (typeof i !== \"number\") i = 1;\n      i = Math.min(2, i);\n      if (this.endsWith(\"{\\n\") || this.endsWith(\":\\n\")) i--;\n      if (i <= 0) return;\n\n      for (var j = 0; j < i; j++) {\n        this._newline();\n      }\n    }\n  }, {\n    key: \"endsWith\",\n    value: function endsWith(str) {\n      return this._buf.endsWith(str);\n    }\n  }, {\n    key: \"removeTrailingNewline\",\n    value: function removeTrailingNewline() {\n      this._buf.removeTrailingNewline();\n    }\n  }, {\n    key: \"exactSource\",\n    value: function exactSource(loc, cb) {\n      this._catchUp(\"start\", loc);\n\n      this._buf.exactSource(loc, cb);\n    }\n  }, {\n    key: \"source\",\n    value: function source(prop, loc) {\n      this._catchUp(prop, loc);\n\n      this._buf.source(prop, loc);\n    }\n  }, {\n    key: \"withSource\",\n    value: function withSource(prop, loc, cb) {\n      this._catchUp(prop, loc);\n\n      this._buf.withSource(prop, loc, cb);\n    }\n  }, {\n    key: \"_space\",\n    value: function _space() {\n      this._append(\" \", true);\n    }\n  }, {\n    key: \"_newline\",\n    value: function _newline() {\n      this._append(\"\\n\", true);\n    }\n  }, {\n    key: \"_append\",\n    value: function _append(str) {\n      var queue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      this._maybeAddParen(str);\n\n      this._maybeIndent(str);\n\n      if (queue) this._buf.queue(str);else this._buf.append(str);\n      this._endsWithWord = false;\n      this._endsWithInteger = false;\n    }\n  }, {\n    key: \"_maybeIndent\",\n    value: function _maybeIndent(str) {\n      if (this._indent && this.endsWith(\"\\n\") && str[0] !== \"\\n\") {\n        this._buf.queue(this._getIndent());\n      }\n    }\n  }, {\n    key: \"_maybeAddParen\",\n    value: function _maybeAddParen(str) {\n      var parenPushNewlineState = this._parenPushNewlineState;\n      if (!parenPushNewlineState) return;\n      this._parenPushNewlineState = null;\n      var i;\n\n      for (i = 0; i < str.length && str[i] === \" \"; i++) {\n        continue;\n      }\n\n      if (i === str.length) return;\n      var cha = str[i];\n\n      if (cha !== \"\\n\") {\n        if (cha !== \"/\") return;\n        if (i + 1 === str.length) return;\n        var chaPost = str[i + 1];\n        if (chaPost !== \"/\" && chaPost !== \"*\") return;\n      }\n\n      this.token(\"(\");\n      this.indent();\n      parenPushNewlineState.printed = true;\n    }\n  }, {\n    key: \"_catchUp\",\n    value: function _catchUp(prop, loc) {\n      if (!this.format.retainLines) return;\n      var pos = loc ? loc[prop] : null;\n\n      if (pos && pos.line !== null) {\n        var count = pos.line - this._buf.getCurrentLine();\n\n        for (var i = 0; i < count; i++) {\n          this._newline();\n        }\n      }\n    }\n  }, {\n    key: \"_getIndent\",\n    value: function _getIndent() {\n      return (0, _repeat.default)(this.format.indent.style, this._indent);\n    }\n  }, {\n    key: \"startTerminatorless\",\n    value: function startTerminatorless() {\n      var isLabel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (isLabel) {\n        this._noLineTerminator = true;\n        return null;\n      } else {\n        return this._parenPushNewlineState = {\n          printed: false\n        };\n      }\n    }\n  }, {\n    key: \"endTerminatorless\",\n    value: function endTerminatorless(state) {\n      this._noLineTerminator = false;\n\n      if (state && state.printed) {\n        this.dedent();\n        this.newline();\n        this.token(\")\");\n      }\n    }\n  }, {\n    key: \"print\",\n    value: function print(node, parent) {\n      var _this = this;\n\n      if (!node) return;\n      var oldConcise = this.format.concise;\n\n      if (node._compact) {\n        this.format.concise = true;\n      }\n\n      var printMethod = this[node.type];\n\n      if (!printMethod) {\n        throw new ReferenceError(\"unknown node of type \".concat(JSON.stringify(node.type), \" with constructor \").concat(JSON.stringify(node && node.constructor.name)));\n      }\n\n      this._printStack.push(node);\n\n      var oldInAux = this._insideAux;\n      this._insideAux = !node.loc;\n\n      this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n      var needsParens = n.needsParens(node, parent, this._printStack);\n\n      if (this.format.retainFunctionParens && node.type === \"FunctionExpression\" && node.extra && node.extra.parenthesized) {\n        needsParens = true;\n      }\n\n      if (needsParens) this.token(\"(\");\n\n      this._printLeadingComments(node);\n\n      var loc = t.isProgram(node) || t.isFile(node) ? null : node.loc;\n      this.withSource(\"start\", loc, function () {\n        printMethod.call(_this, node, parent);\n      });\n\n      this._printTrailingComments(node);\n\n      if (needsParens) this.token(\")\");\n\n      this._printStack.pop();\n\n      this.format.concise = oldConcise;\n      this._insideAux = oldInAux;\n    }\n  }, {\n    key: \"_maybeAddAuxComment\",\n    value: function _maybeAddAuxComment(enteredPositionlessNode) {\n      if (enteredPositionlessNode) this._printAuxBeforeComment();\n      if (!this._insideAux) this._printAuxAfterComment();\n    }\n  }, {\n    key: \"_printAuxBeforeComment\",\n    value: function _printAuxBeforeComment() {\n      if (this._printAuxAfterOnNextUserNode) return;\n      this._printAuxAfterOnNextUserNode = true;\n      var comment = this.format.auxiliaryCommentBefore;\n\n      if (comment) {\n        this._printComment({\n          type: \"CommentBlock\",\n          value: comment\n        });\n      }\n    }\n  }, {\n    key: \"_printAuxAfterComment\",\n    value: function _printAuxAfterComment() {\n      if (!this._printAuxAfterOnNextUserNode) return;\n      this._printAuxAfterOnNextUserNode = false;\n      var comment = this.format.auxiliaryCommentAfter;\n\n      if (comment) {\n        this._printComment({\n          type: \"CommentBlock\",\n          value: comment\n        });\n      }\n    }\n  }, {\n    key: \"getPossibleRaw\",\n    value: function getPossibleRaw(node) {\n      var extra = node.extra;\n\n      if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n        return extra.raw;\n      }\n    }\n  }, {\n    key: \"printJoin\",\n    value: function printJoin(nodes, parent) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (!nodes || !nodes.length) return;\n      if (opts.indent) this.indent();\n      var newlineOpts = {\n        addNewlines: opts.addNewlines\n      };\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        if (!node) continue;\n        if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n        this.print(node, parent);\n\n        if (opts.iterator) {\n          opts.iterator(node, i);\n        }\n\n        if (opts.separator && i < nodes.length - 1) {\n          opts.separator.call(this);\n        }\n\n        if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n      }\n\n      if (opts.indent) this.dedent();\n    }\n  }, {\n    key: \"printAndIndentOnComments\",\n    value: function printAndIndentOnComments(node, parent) {\n      var indent = node.leadingComments && node.leadingComments.length > 0;\n      if (indent) this.indent();\n      this.print(node, parent);\n      if (indent) this.dedent();\n    }\n  }, {\n    key: \"printBlock\",\n    value: function printBlock(parent) {\n      var node = parent.body;\n\n      if (!t.isEmptyStatement(node)) {\n        this.space();\n      }\n\n      this.print(node, parent);\n    }\n  }, {\n    key: \"_printTrailingComments\",\n    value: function _printTrailingComments(node) {\n      this._printComments(this._getComments(false, node));\n    }\n  }, {\n    key: \"_printLeadingComments\",\n    value: function _printLeadingComments(node) {\n      this._printComments(this._getComments(true, node));\n    }\n  }, {\n    key: \"printInnerComments\",\n    value: function printInnerComments(node) {\n      var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!node.innerComments || !node.innerComments.length) return;\n      if (indent) this.indent();\n\n      this._printComments(node.innerComments);\n\n      if (indent) this.dedent();\n    }\n  }, {\n    key: \"printSequence\",\n    value: function printSequence(nodes, parent) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      opts.statement = true;\n      return this.printJoin(nodes, parent, opts);\n    }\n  }, {\n    key: \"printList\",\n    value: function printList(items, parent) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (opts.separator == null) {\n        opts.separator = commaSeparator;\n      }\n\n      return this.printJoin(items, parent, opts);\n    }\n  }, {\n    key: \"_printNewline\",\n    value: function _printNewline(leading, node, parent, opts) {\n      if (this.format.retainLines || this.format.compact) return;\n\n      if (this.format.concise) {\n        this.space();\n        return;\n      }\n\n      var lines = 0;\n\n      if (this._buf.hasContent()) {\n        if (!leading) lines++;\n        if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n        var needs = leading ? n.needsWhitespaceBefore : n.needsWhitespaceAfter;\n        if (needs(node, parent)) lines++;\n      }\n\n      this.newline(lines);\n    }\n  }, {\n    key: \"_getComments\",\n    value: function _getComments(leading, node) {\n      return node && (leading ? node.leadingComments : node.trailingComments) || [];\n    }\n  }, {\n    key: \"_printComment\",\n    value: function _printComment(comment) {\n      var _this2 = this;\n\n      if (!this.format.shouldPrintComment(comment.value)) return;\n      if (comment.ignore) return;\n      if (this._printedComments.has(comment)) return;\n\n      this._printedComments.add(comment);\n\n      if (comment.start != null) {\n        if (this._printedCommentStarts[comment.start]) return;\n        this._printedCommentStarts[comment.start] = true;\n      }\n\n      var isBlockComment = comment.type === \"CommentBlock\";\n      this.newline(this._buf.hasContent() && !this._noLineTerminator && isBlockComment ? 1 : 0);\n      if (!this.endsWith(\"[\") && !this.endsWith(\"{\")) this.space();\n      var val = !isBlockComment && !this._noLineTerminator ? \"//\".concat(comment.value, \"\\n\") : \"/*\".concat(comment.value, \"*/\");\n\n      if (isBlockComment && this.format.indent.adjustMultilineComment) {\n        var offset = comment.loc && comment.loc.start.column;\n\n        if (offset) {\n          var newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n          val = val.replace(newlineRegex, \"\\n\");\n        }\n\n        var indentSize = Math.max(this._getIndent().length, this._buf.getCurrentColumn());\n        val = val.replace(/\\n(?!$)/g, \"\\n\".concat((0, _repeat.default)(\" \", indentSize)));\n      }\n\n      if (this.endsWith(\"/\")) this._space();\n      this.withSource(\"start\", comment.loc, function () {\n        _this2._append(val);\n      });\n      this.newline(isBlockComment && !this._noLineTerminator ? 1 : 0);\n    }\n  }, {\n    key: \"_printComments\",\n    value: function _printComments(comments) {\n      if (!comments || !comments.length) return;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = comments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var comment = _step.value;\n\n          this._printComment(comment);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Printer;\n}();\n\nexports.default = Printer;\nObject.assign(Printer.prototype, generatorFunctions);\n\nfunction commaSeparator() {\n  this.token(\",\");\n  this.space();\n}","map":{"version":3,"sources":["/home/hyper/Downloads/gronthik/bookstore/node_modules/@babel/helpers/node_modules/@babel/generator/lib/printer.js"],"names":["Object","defineProperty","exports","value","default","_isInteger","_interopRequireDefault","require","_repeat","_buffer","n","_interopRequireWildcard","t","generatorFunctions","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","SCIENTIFIC_NOTATION","ZERO_DECIMAL_INTEGER","NON_DECIMAL_LITERAL","Printer","format","map","inForStatementInitCounter","_printStack","_indent","_insideAux","_printedCommentStarts","_parenPushNewlineState","_noLineTerminator","_printAuxAfterOnNextUserNode","_printedComments","WeakSet","_endsWithInteger","_endsWithWord","_buf","ast","print","_maybeAddAuxComment","compact","concise","force","_append","minified","removeLastSemicolon","token","hasContent","endsWith","_space","str","indexOf","word","test","length","i","retainLines","space","Math","min","j","_newline","removeTrailingNewline","loc","cb","_catchUp","exactSource","prop","source","withSource","queue","_maybeAddParen","_maybeIndent","append","_getIndent","parenPushNewlineState","cha","chaPost","indent","printed","pos","line","count","getCurrentLine","style","isLabel","state","dedent","newline","node","parent","oldConcise","_compact","printMethod","type","ReferenceError","JSON","stringify","constructor","name","push","oldInAux","needsParens","retainFunctionParens","extra","parenthesized","_printLeadingComments","isProgram","isFile","_printTrailingComments","pop","enteredPositionlessNode","_printAuxBeforeComment","_printAuxAfterComment","comment","auxiliaryCommentBefore","_printComment","auxiliaryCommentAfter","raw","rawValue","nodes","opts","newlineOpts","addNewlines","statement","_printNewline","iterator","separator","leadingComments","body","isEmptyStatement","_printComments","_getComments","innerComments","printJoin","items","commaSeparator","leading","lines","needs","needsWhitespaceBefore","needsWhitespaceAfter","trailingComments","shouldPrintComment","ignore","add","start","isBlockComment","val","adjustMultilineComment","offset","column","newlineRegex","RegExp","replace","indentSize","max","getCurrentColumn","comments","assign"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isInteger = _interopRequireDefault(require(\"lodash/isInteger\"));\n\nvar _repeat = _interopRequireDefault(require(\"lodash/repeat\"));\n\nvar _buffer = _interopRequireDefault(require(\"./buffer\"));\n\nvar n = _interopRequireWildcard(require(\"./node\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar generatorFunctions = _interopRequireWildcard(require(\"./generators\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SCIENTIFIC_NOTATION = /e/i;\nconst ZERO_DECIMAL_INTEGER = /\\.0+$/;\nconst NON_DECIMAL_LITERAL = /^0[box]/;\n\nclass Printer {\n  constructor(format, map) {\n    this.inForStatementInitCounter = 0;\n    this._printStack = [];\n    this._indent = 0;\n    this._insideAux = false;\n    this._printedCommentStarts = {};\n    this._parenPushNewlineState = null;\n    this._noLineTerminator = false;\n    this._printAuxAfterOnNextUserNode = false;\n    this._printedComments = new WeakSet();\n    this._endsWithInteger = false;\n    this._endsWithWord = false;\n    this.format = format || {};\n    this._buf = new _buffer.default(map);\n  }\n\n  generate(ast) {\n    this.print(ast);\n\n    this._maybeAddAuxComment();\n\n    return this._buf.get();\n  }\n\n  indent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent++;\n  }\n\n  dedent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent--;\n  }\n\n  semicolon(force = false) {\n    this._maybeAddAuxComment();\n\n    this._append(\";\", !force);\n  }\n\n  rightBrace() {\n    if (this.format.minified) {\n      this._buf.removeLastSemicolon();\n    }\n\n    this.token(\"}\");\n  }\n\n  space(force = false) {\n    if (this.format.compact) return;\n\n    if (this._buf.hasContent() && !this.endsWith(\" \") && !this.endsWith(\"\\n\") || force) {\n      this._space();\n    }\n  }\n\n  word(str) {\n    if (this._endsWithWord || this.endsWith(\"/\") && str.indexOf(\"/\") === 0) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n\n    this._endsWithWord = true;\n  }\n\n  number(str) {\n    this.word(str);\n    this._endsWithInteger = (0, _isInteger.default)(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== \".\";\n  }\n\n  token(str) {\n    if (str === \"--\" && this.endsWith(\"!\") || str[0] === \"+\" && this.endsWith(\"+\") || str[0] === \"-\" && this.endsWith(\"-\") || str[0] === \".\" && this._endsWithInteger) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n  }\n\n  newline(i) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    if (this.endsWith(\"\\n\\n\")) return;\n    if (typeof i !== \"number\") i = 1;\n    i = Math.min(2, i);\n    if (this.endsWith(\"{\\n\") || this.endsWith(\":\\n\")) i--;\n    if (i <= 0) return;\n\n    for (let j = 0; j < i; j++) {\n      this._newline();\n    }\n  }\n\n  endsWith(str) {\n    return this._buf.endsWith(str);\n  }\n\n  removeTrailingNewline() {\n    this._buf.removeTrailingNewline();\n  }\n\n  exactSource(loc, cb) {\n    this._catchUp(\"start\", loc);\n\n    this._buf.exactSource(loc, cb);\n  }\n\n  source(prop, loc) {\n    this._catchUp(prop, loc);\n\n    this._buf.source(prop, loc);\n  }\n\n  withSource(prop, loc, cb) {\n    this._catchUp(prop, loc);\n\n    this._buf.withSource(prop, loc, cb);\n  }\n\n  _space() {\n    this._append(\" \", true);\n  }\n\n  _newline() {\n    this._append(\"\\n\", true);\n  }\n\n  _append(str, queue = false) {\n    this._maybeAddParen(str);\n\n    this._maybeIndent(str);\n\n    if (queue) this._buf.queue(str);else this._buf.append(str);\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _maybeIndent(str) {\n    if (this._indent && this.endsWith(\"\\n\") && str[0] !== \"\\n\") {\n      this._buf.queue(this._getIndent());\n    }\n  }\n\n  _maybeAddParen(str) {\n    const parenPushNewlineState = this._parenPushNewlineState;\n    if (!parenPushNewlineState) return;\n    this._parenPushNewlineState = null;\n    let i;\n\n    for (i = 0; i < str.length && str[i] === \" \"; i++) continue;\n\n    if (i === str.length) return;\n    const cha = str[i];\n\n    if (cha !== \"\\n\") {\n      if (cha !== \"/\") return;\n      if (i + 1 === str.length) return;\n      const chaPost = str[i + 1];\n      if (chaPost !== \"/\" && chaPost !== \"*\") return;\n    }\n\n    this.token(\"(\");\n    this.indent();\n    parenPushNewlineState.printed = true;\n  }\n\n  _catchUp(prop, loc) {\n    if (!this.format.retainLines) return;\n    const pos = loc ? loc[prop] : null;\n\n    if (pos && pos.line !== null) {\n      const count = pos.line - this._buf.getCurrentLine();\n\n      for (let i = 0; i < count; i++) {\n        this._newline();\n      }\n    }\n  }\n\n  _getIndent() {\n    return (0, _repeat.default)(this.format.indent.style, this._indent);\n  }\n\n  startTerminatorless(isLabel = false) {\n    if (isLabel) {\n      this._noLineTerminator = true;\n      return null;\n    } else {\n      return this._parenPushNewlineState = {\n        printed: false\n      };\n    }\n  }\n\n  endTerminatorless(state) {\n    this._noLineTerminator = false;\n\n    if (state && state.printed) {\n      this.dedent();\n      this.newline();\n      this.token(\")\");\n    }\n  }\n\n  print(node, parent) {\n    if (!node) return;\n    const oldConcise = this.format.concise;\n\n    if (node._compact) {\n      this.format.concise = true;\n    }\n\n    const printMethod = this[node.type];\n\n    if (!printMethod) {\n      throw new ReferenceError(`unknown node of type ${JSON.stringify(node.type)} with constructor ${JSON.stringify(node && node.constructor.name)}`);\n    }\n\n    this._printStack.push(node);\n\n    const oldInAux = this._insideAux;\n    this._insideAux = !node.loc;\n\n    this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n    let needsParens = n.needsParens(node, parent, this._printStack);\n\n    if (this.format.retainFunctionParens && node.type === \"FunctionExpression\" && node.extra && node.extra.parenthesized) {\n      needsParens = true;\n    }\n\n    if (needsParens) this.token(\"(\");\n\n    this._printLeadingComments(node);\n\n    const loc = t.isProgram(node) || t.isFile(node) ? null : node.loc;\n    this.withSource(\"start\", loc, () => {\n      printMethod.call(this, node, parent);\n    });\n\n    this._printTrailingComments(node);\n\n    if (needsParens) this.token(\")\");\n\n    this._printStack.pop();\n\n    this.format.concise = oldConcise;\n    this._insideAux = oldInAux;\n  }\n\n  _maybeAddAuxComment(enteredPositionlessNode) {\n    if (enteredPositionlessNode) this._printAuxBeforeComment();\n    if (!this._insideAux) this._printAuxAfterComment();\n  }\n\n  _printAuxBeforeComment() {\n    if (this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = true;\n    const comment = this.format.auxiliaryCommentBefore;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  _printAuxAfterComment() {\n    if (!this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = false;\n    const comment = this.format.auxiliaryCommentAfter;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  getPossibleRaw(node) {\n    const extra = node.extra;\n\n    if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n      return extra.raw;\n    }\n  }\n\n  printJoin(nodes, parent, opts = {}) {\n    if (!nodes || !nodes.length) return;\n    if (opts.indent) this.indent();\n    const newlineOpts = {\n      addNewlines: opts.addNewlines\n    };\n\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (!node) continue;\n      if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n      this.print(node, parent);\n\n      if (opts.iterator) {\n        opts.iterator(node, i);\n      }\n\n      if (opts.separator && i < nodes.length - 1) {\n        opts.separator.call(this);\n      }\n\n      if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  }\n\n  printAndIndentOnComments(node, parent) {\n    const indent = node.leadingComments && node.leadingComments.length > 0;\n    if (indent) this.indent();\n    this.print(node, parent);\n    if (indent) this.dedent();\n  }\n\n  printBlock(parent) {\n    const node = parent.body;\n\n    if (!t.isEmptyStatement(node)) {\n      this.space();\n    }\n\n    this.print(node, parent);\n  }\n\n  _printTrailingComments(node) {\n    this._printComments(this._getComments(false, node));\n  }\n\n  _printLeadingComments(node) {\n    this._printComments(this._getComments(true, node));\n  }\n\n  printInnerComments(node, indent = true) {\n    if (!node.innerComments || !node.innerComments.length) return;\n    if (indent) this.indent();\n\n    this._printComments(node.innerComments);\n\n    if (indent) this.dedent();\n  }\n\n  printSequence(nodes, parent, opts = {}) {\n    opts.statement = true;\n    return this.printJoin(nodes, parent, opts);\n  }\n\n  printList(items, parent, opts = {}) {\n    if (opts.separator == null) {\n      opts.separator = commaSeparator;\n    }\n\n    return this.printJoin(items, parent, opts);\n  }\n\n  _printNewline(leading, node, parent, opts) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    let lines = 0;\n\n    if (this._buf.hasContent()) {\n      if (!leading) lines++;\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n      const needs = leading ? n.needsWhitespaceBefore : n.needsWhitespaceAfter;\n      if (needs(node, parent)) lines++;\n    }\n\n    this.newline(lines);\n  }\n\n  _getComments(leading, node) {\n    return node && (leading ? node.leadingComments : node.trailingComments) || [];\n  }\n\n  _printComment(comment) {\n    if (!this.format.shouldPrintComment(comment.value)) return;\n    if (comment.ignore) return;\n    if (this._printedComments.has(comment)) return;\n\n    this._printedComments.add(comment);\n\n    if (comment.start != null) {\n      if (this._printedCommentStarts[comment.start]) return;\n      this._printedCommentStarts[comment.start] = true;\n    }\n\n    const isBlockComment = comment.type === \"CommentBlock\";\n    this.newline(this._buf.hasContent() && !this._noLineTerminator && isBlockComment ? 1 : 0);\n    if (!this.endsWith(\"[\") && !this.endsWith(\"{\")) this.space();\n    let val = !isBlockComment && !this._noLineTerminator ? `//${comment.value}\\n` : `/*${comment.value}*/`;\n\n    if (isBlockComment && this.format.indent.adjustMultilineComment) {\n      const offset = comment.loc && comment.loc.start.column;\n\n      if (offset) {\n        const newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n        val = val.replace(newlineRegex, \"\\n\");\n      }\n\n      const indentSize = Math.max(this._getIndent().length, this._buf.getCurrentColumn());\n      val = val.replace(/\\n(?!$)/g, `\\n${(0, _repeat.default)(\" \", indentSize)}`);\n    }\n\n    if (this.endsWith(\"/\")) this._space();\n    this.withSource(\"start\", comment.loc, () => {\n      this._append(val);\n    });\n    this.newline(isBlockComment && !this._noLineTerminator ? 1 : 0);\n  }\n\n  _printComments(comments) {\n    if (!comments || !comments.length) return;\n\n    for (const comment of comments) {\n      this._printComment(comment);\n    }\n  }\n\n}\n\nexports.default = Printer;\nObject.assign(Printer.prototype, generatorFunctions);\n\nfunction commaSeparator() {\n  this.token(\",\");\n  this.space();\n}"]},"metadata":{},"sourceType":"script"}